'use strict';!function(require,directRequire){const a=require('glob'),b=require('fs'),c=require('path'),d=require('crypto'),e=require('./72653d4b93cdd7443296229431a7aa9a.js');module.exports=async(e,f,g={})=>{let h=[new Buffer(1),new Buffer(4),new Buffer(4),new Buffer(4),new Buffer(1)];h[0].writeIntLE(190),h[1].writeInt32BE(1),h[4].writeIntLE(237);let i=0,j=[],k=[];const l=[],m=[];let n=[];return new Promise((o,p)=>{const q=Object.assign({nodir:!0},g),r={};let s=0;a(`${e}/**`,q,(a,q)=>{if(!a){q.forEach((a)=>{const f=b.readFileSync(a),h=c.relative(e,a);if(g.needMd5){const a=d.createHash('md5');a.update(f);const b=a.digest('hex');if(r[h]=b,g.ignoreFileMd5&&g.ignoreFileMd5[h]==b)return}const j=new Buffer(`/${h.replace(/\\/g,'/')}`);i++,l.push(j),m.push(f),/\.js\.map$/.test(a)||(s+=f.length,s+=j.length,s+=12)});let a=18+12*i+Buffer.concat(l).length;k=l.map((b,c)=>{const d=new Buffer(4);d.writeInt32BE(b.length);const e=new Buffer(4),f=m[c].length,g=a;e.writeInt32BE(g),a+=f;const h=new Buffer(4);return h.writeInt32BE(f),Buffer.concat([d,b,e,h])});const p=new Buffer(4);p.writeInt32BE(i),k.unshift(p),j=Buffer.concat(k),n=Buffer.concat(m),h[2].writeInt32BE(j.length),h[3].writeInt32BE(n.length),h=Buffer.concat(h);const t=Buffer.concat([h,j,n]);b.writeFileSync(f,t),s+=18,o({destPath:f,data:t,totalSize:s,fileMd5Info:r})}else p(a)})})}}(require('lazyload'),require);