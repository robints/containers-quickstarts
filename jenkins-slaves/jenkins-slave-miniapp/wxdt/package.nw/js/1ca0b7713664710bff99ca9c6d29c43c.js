;!function(require, directRequire){;"use strict";const React=require("react"),{connect}=require("react-redux"),PropTypes=require("prop-types"),CompactToolbar=require('./37b4e44f6cb5308df338387678f31341.js'),StatusToolbar=require('./a44d6a009a6865f76e1da47c6c84025a.js'),NetworkToolbar=require('./0b33efa8324f13c48329436edfa8d2c3.js'),DeviceToolbar=require('./f53c8427c995d0915bad1fb1a545b516.js'),windowActions=require('./a8c87029da0fa06e986298d447ab0fe2.js'),toolbarActions=require('./fc137838572a83604db39acff8e909e0.js'),tools=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),DeviceScaleToolbar=require('./1f98c7ca32b0549d99bce70cd41a3fcd.js'),C=require('./56c390e04c10e91a4aa2a2c19d9a885d.js'),ActionToolbar=require('./f135b178f1f260cbac97a2b0c068585d.js'),{canSimulatorRotate,rotateSimulator}=require('./a3d662b5798bbb27bf21be3e3587a588.js'),mapStateToProps=(a)=>{const b=a.window.simulator||{},c=a.window.mainWindow,d=a.project.current,e=a.toolbar,f=d&&d.attr&&d.attr.gameApp;return{mainWindow:c,project:d,gameApp:f,muted:a.toolbar.muted,simulatorShow:b.show,simulatorPopup:b.popup,simulatorPosition:b.position,deviceInfo:e.deviceInfo,rotated:e.rotated,canRotate:canSimulatorRotate(a)}},mapDispatchToProps=(a)=>({toggleSimulatorPosition:tools.bindActionCreators(windowActions.toggleSimulatorPosition,a),toggleSimulatorPopup:tools.bindActionCreators(windowActions.toggleSimulatorPopup,a),setMuted:tools.bindActionCreators(toolbarActions.setMuted,a),rotateSimulator:tools.bindActionCreators((a)=>(b,c)=>rotateSimulator(a,b,c),a)});class ToolBar extends React.Component{constructor(a){super(a),this.toggleAlwaysOnTop=()=>{let a;try{a=this.context.window||nw.Window.get(),a.setAlwaysOnTop(!this.state.alwaysOnTop),this.setState({alwaysOnTop:!this.state.alwaysOnTop})}catch(a){}},this.onMutedChange=()=>{this.props.setMuted(!this.props.muted)},this.handleRotate=()=>{this.props.rotateSimulator(!this.props.rotated)},this.state={alwaysOnTop:!1}}renderPopupToolbar(){return React.createElement("div",{className:"simulator-toolbar"},React.createElement(CompactToolbar,{id:"simulator-toolbar-compact"}),this.props.mainWindow===C.MAIN_WINDOW_TYPE.WEB_DEBUGGER||this.props.gameApp?null:React.createElement(StatusToolbar,{context:this.context,id:"simulator-toolbar-status"}),React.createElement("div",{className:"simulator-toolbar-action"},React.createElement("a",{href:"javascript:;"},React.createElement("i",{className:this.state.alwaysOnTop?"ui-icon-thumbtack-pinned":"ui-icon-thumbtack",onClick:this.toggleAlwaysOnTop})),this.props.project?React.createElement("a",{href:"javascript:;",onClick:this.onMutedChange},this.props.muted?React.createElement("i",{className:"ui-icon-mute"}):React.createElement("i",{className:"ui-icon-unmute"})):null,global.isSimple?null:React.createElement("a",{href:"javascript:;"},React.createElement("i",{className:"ui-icon-attach",onClick:this.props.toggleSimulatorPopup})),this.props.canRotate?React.createElement("a",{href:"javascript:;"},React.createElement("i",{className:"ui-icon-rotation",onClick:this.handleRotate})):null))}render(){if(global.onlySimulator)return null;if(this.context.isPopup)return this.renderPopupToolbar();let a=null;return global.isSimple||this.props.simulatorPopup||("left"===this.props.simulatorPosition?a=React.createElement("a",{href:"javascript:;"},React.createElement("i",{className:"ui-icon-collapse-r",onClick:this.props.toggleSimulatorPosition})):a=React.createElement("a",{href:"javascript:;"},React.createElement("i",{className:"ui-icon-collapse",onClick:this.props.toggleSimulatorPosition}))),React.createElement("div",{className:"simulator-toolbar"},React.createElement(DeviceToolbar,{id:"simulator-toolbar-device"}),React.createElement(DeviceScaleToolbar,{id:"simulator-toolbar-scale"}),React.createElement(NetworkToolbar,{id:"simulator-toolbar-network"}),React.createElement(ActionToolbar,{id:"simulator-toolbar-action"}),React.createElement("div",{className:"simulator-toolbar-action"},this.props.project?React.createElement("a",{href:"javascript:;",onClick:this.onMutedChange},this.props.muted?React.createElement("i",{className:"ui-icon-mute"}):React.createElement("i",{className:"ui-icon-unmute"})):null,global.isSimple?null:React.createElement("a",{href:"javascript:;"},React.createElement("i",{className:"ui-icon-detach",onClick:this.props.toggleSimulatorPopup})),this.props.canRotate?React.createElement("a",{href:"javascript:;"},React.createElement("i",{className:"ui-icon-rotation",onClick:this.handleRotate})):null,a))}}ToolBar.contextTypes={isPopup:PropTypes.bool,window:PropTypes.object},module.exports=connect(mapStateToProps,mapDispatchToProps)(ToolBar);
;}(require("lazyload"), require);
