;!function(require, directRequire){;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const reporter=require('./5c2b1a0770e0c320de6ae69667bea4de.js'),utils_1=require('./344232cd2199c9c3a024b4005d054672.js'),ide_mark_1=require('./6ec1bd15f70b3ac0c6b44da80b0fe6c6.js'),config_1=require('./292aedc562d71aa6200e3471d0bc7b8e.js'),store=require('./bc78839ccca8df9e5ceeb7fae11b7be2.js'),log=require('./72653d4b93cdd7443296229431a7aa9a.js');class IDEPerformanceObserver{constructor(){this.heroElementRecords=new Map,this.timings=new Map,this.firstCompileOffset=0,this._storeListeners=new Set,this._listenersRegisterTime=new WeakMap,this.debug=-1<nw.App.fullArgv.indexOf("--perf-mode"),this.blockingDebug=-1<nw.App.fullArgv.indexOf("--perf-mode"),this.performanceTimingOffset=0,this.onPerformanceEvents=(a)=>{const b=a.getEntries();for(const c of b)switch(c.entryType){case"navigation":{this.onPerformanceNavigationTimingEvent(c);break}case"mark":{this.onPerformanceMarkEvent(c);break}case"measure":{this.onPerformanceMeasureEvent(c);break}case"paint":{this.onPerformancePaintTimingEvent(c);break}}},this.onPerformanceNavigationTimingEvent=(a)=>{this.debug&&console.warn("PerformanceNavigationTiming",a)},this.onPerformanceMarkEvent=(a)=>{a.name.startsWith("\u269B")||a.name.startsWith(config_1.PREFIX_IDE)&&(this.debug&&console.warn("ide performance mark",a),ide_mark_1.default(this,a))},this.onPerformanceMeasureEvent=(a)=>{a.name.startsWith("\u269B")||a.name.startsWith(config_1.PREFIX_IDE)},this.onPerformancePaintTimingEvent=(a)=>{if(this.debug&&console.warn("PerformancePaintTiming",a.name,a),"first-paint"===a.name){const b=a.startTime+this.performanceTimingOffset;reporter.reportFirstPaint(b),this.timings.set(config_1.TIMING.FIRST_PAINT,b),this.blockingDebug&&this.alert(`first-paint: ${b.toFixed(0)}ms`)}else if("first-contentful-paint"===a.name){const b=a.startTime+this.performanceTimingOffset;reporter.reportFirstContentfulPaint(b),this.timings.set(config_1.TIMING.FIRST_CONTENTFUL_PAINT,b),this.blockingDebug&&this.alert(`first-contentful-paint: ${b.toFixed(0)}ms`)}},this.firstCompileListener=(a,b)=>{const c=a.simulator&&a.simulator.compileCommand,d=b.simulator&&b.simulator.compileCommand;if(d!==c&&d.ts!==c.ts){const a=this.getFirstCompileListenerRegisterTime();a&&(3e3>+new Date-a+this.performanceTimingOffset?utils_1.markFirstCompileStart():log.info(`[perf observer] [warn] too long after the listener is register, cannot mark first compile start: ${+new Date-a}ms`))}},this.performanceObserver=new PerformanceObserver(this.onPerformanceEvents),this._unsubscribeStore=this.subscribeStore(),this.measureFirstInputDelay(),this.watchInputLatency()}start(){this.performanceObserver.observe({entryTypes:["navigation","mark","measure","paint"],buffered:!0})}disconnect(){this.performanceObserver.disconnect()}alert(a){const b=performance.now();window.alert(a),this.performanceTimingOffset-=performance.now()-b}registerFirstCompileListener(){this._storeListeners.add(this.firstCompileListener),this._listenersRegisterTime.set(this.firstCompileListener,+new Date)}unregisterFirstCompileListener(){this._storeListeners.delete(this.firstCompileListener)}getFirstCompileListenerRegisterTime(){return this._listenersRegisterTime.get(this.firstCompileListener)}subscribeStore(){let a=store.getState();return store.subscribe(()=>{if(0<this._storeListeners.size){const b=store.getState();for(const c of this._storeListeners)try{c(a,b)}catch(a){log.error("[perf observer] store listener error: ",a)}a=b}})}measureFirstInputDelay(){function a(g){if(g.cancelable){const h=performance.now()-g.timeStamp;c||(c=g,d=h,e=+new Date,global.contentWindow.removeEventListener("mousedown",a,{capture:!0}),0<d&&d<e-f&&(b.debug&&console.warn("first input delay",d),reporter.reportFirstInputDelay(d)))}}const b=this;let c,d,e;const f=+new Date;global.contentWindow.addEventListener("mousedown",a,{capture:!0,passive:!0})}watchInputLatency(){global.contentWindow.addEventListener("mousedown",(a)=>{if(a.cancelable){const b=performance.now()-a.timeStamp;100<b&&(this.debug&&console.warn("[perf] hit input latency",b,a),reporter.reportHitInputLatency())}},{capture:!0,passive:!0})}}exports.IDEPerformanceObserver=IDEPerformanceObserver;const idePerformanceObserver=new IDEPerformanceObserver;exports.default=idePerformanceObserver;
;}(require("lazyload"), require);
