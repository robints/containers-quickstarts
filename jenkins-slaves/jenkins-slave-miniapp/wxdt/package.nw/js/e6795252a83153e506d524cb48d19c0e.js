;!function(require, directRequire){;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const React=require("react"),react_1=require("react"),react_redux_1=require("react-redux"),progress_dialog_1=require('./bfc6ae590036de76f541bfe5ac6f68c3.js'),progress_recorder_1=require('./664c85134de31b9a04ff1f03a1492daf.js'),locales=require('./common/locales/index.js'),tools=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),windowActions=require('./a8c87029da0fa06e986298d447ab0fe2.js'),mapStateToProps=(a)=>{return{show:a.window.progressDialog.show}},mapDispatchToProps=(a)=>{return{setProgressDialog:tools.bindActionCreators(windowActions.setProgressDialog,a)}},TOGGLE_SHOW_DURATION=1e3;class ProgressDialogController extends react_1.Component{constructor(a){super(a),this.onProgressTaskAdded=(a)=>{a.status!==progress_recorder_1.ITaskStatus.success&&(clearTimeout(this.toggleShowTimeoutId),this.setState({show:!0,items:[this.convertProgressRecorderTaskToDialogItem(a),...this.state.items]}),this.toggleShowTimeoutId=setTimeout(()=>{this.setState({show:!1})},TOGGLE_SHOW_DURATION))},this.onProgressTaskSuccess=(a)=>{const b=this.state.items.filter((b)=>b.id!==a.id);this.setState({items:b}),0===b.length&&this.props.show&&this.props.setProgressDialog({show:!1})},this.onProgressTaskUpdate=(a)=>{const b=this.state.items.map((b)=>{return b.id===a.id?a.showInDialog?this.convertProgressRecorderTaskToDialogItem(a):void 0:b}).filter((a)=>!!a);this.setState({items:b}),0===b.length&&this.props.show&&this.props.setProgressDialog({show:!1})},this.onItemClose=(a)=>{progress_recorder_1.get().hideInDialog(a)};progress_recorder_1.get();this.state={items:[],show:!1}}componentDidMount(){const a=progress_recorder_1.get(),b=[...a.tasks.values()].filter((a)=>a.status!==progress_recorder_1.ITaskStatus.success).map(this.convertProgressRecorderTaskToDialogItem).reverse();this.setState({items:b}),a.on("add",this.onProgressTaskAdded),a.on("success",this.onProgressTaskSuccess),a.on("delete",this.onProgressTaskSuccess),a.on("fail",this.onProgressTaskUpdate),a.on("update",this.onProgressTaskUpdate)}componentWillUnmount(){const a=progress_recorder_1.get();a.removeListener("add",this.onProgressTaskAdded),a.removeListener("success",this.onProgressTaskSuccess),a.removeListener("delete",this.onProgressTaskSuccess),a.removeListener("fail",this.onProgressTaskUpdate),a.removeListener("update",this.onProgressTaskUpdate)}convertProgressRecorderTaskToDialogItem(a){let b=!1,c="";return a.status===progress_recorder_1.ITaskStatus.fail?(c=locales.config.FAIL,b=!0):a.progressIndeterminate?c=locales.config.ONGOING:c="",{id:a.id,title:a.name,statusTips:c,showProgressBar:!0,progress:a.progress,progressIndeterminate:a.progressIndeterminate,details:a.details,fail:b}}render(){return React.createElement(progress_dialog_1.ProgressDialog,{show:this.props.show||this.state.show,items:this.state.items,onItemClose:this.onItemClose})}}exports.ProgressDialogContainer=react_redux_1.connect(mapStateToProps,mapDispatchToProps)(ProgressDialogController);
;}(require("lazyload"), require);
