;!function(require, directRequire){;'use strict';const path=require('path'),fs=require('fs'),mkdir=require('mkdir-p'),contentWatcher=require('./162bf2ee28b76d3b3d95b685cede4146.js'),pluginContentWatcher=require('./a63026ab5a5a3c59a61a9749a18aa2ca.js'),compileTypeConfig=require('./9fdd4ac31a05c27355910f0d74accd4c.js'),locales=require('./common/locales/index.js'),checkPageJSON=require('./d260ebf687a29f24aed49f66b233ab7d.js'),checkPluginPageJSON=require('./dedcbe3bc309c536210de2a4e997918e.js'),checkExtJSON=require('./551bb965e1f344281d555a429cd2140c.js'),{bufToUTF8}=require('./efc820e1b92d6e4063535296d4a24213.js'),{FILE_NOT_UTF8}=require('./949d8235c744ced2a80121e4dba34c28.js'),{whiteFileExtName,gameWhiteFileExtName}=require('./6242f55dbdfe53c2f07b7a51568311f2.js'),needUTF8CHECK={".json":!0,".wxml":!0,".wxs":!0},alreadyWrite={".js":!0,".wxss":!0};function compileOther(a,b={}){const{srcFilePath:c,fileBuffer:d,destFilePath:e}=b,f=path.extname(c);if(needUTF8CHECK[f]){const a=bufToUTF8(d);if(void 0===a){const a=new Error(locales.config.FILE_NOT_UTF8.format(c));throw a.code=FILE_NOT_UTF8,a}}const g=path.dirname(e);mkdir.sync(g),fs.writeFileSync(e,d)}function getCompileJSON(){}async function compileProjectOther(a,b={}){const c=a.compileType,{distPath:d,allPages:e=[]}=b;let f=await contentWatcher(a),g=f.getAllFile(),h=whiteFileExtName;a.attr&&a.attr.gameApp&&(h=gameWhiteFileExtName);let i=c===compileTypeConfig.plugin?a.miniprogramRoot:'';const j=f.getAllTargetTypeFilesWithOtherTypeFilesOfSameName('json',['wxml','js']),k={};for(const c of g){const b=path.extname(c);if(alreadyWrite[b]||!h[b])continue;if('ext.json'===c){const b=await checkExtJSON(a);if(!b||!b.extEnable)continue}let e=f.getFile(c,null);if('.json'===b&&'app.json'!==c&&'ext.json'!==c&&-1!==j.indexOf(c)){const b=await checkPageJSON(a,c.replace(/\.json$/,''));k[c]=!0,e=new Buffer(JSON.stringify(b),'utf8')}compileOther(a,{fileBuffer:e,srcFilePath:path.join(i,c),destFilePath:path.join(d,i,c)})}for(const c of e){const b=`${c}.json`;if(!k[b]){const e=await checkPageJSON(a,c),f=new Buffer(JSON.stringify(e),'utf8');compileOther(a,{fileBuffer:f,srcFilePath:path.join(i,b),destFilePath:path.join(d,i,b)})}}if(c===compileTypeConfig.plugin){f=await pluginContentWatcher(a),g=f.getAllFile(),h=whiteFileExtName,i=a.pluginRoot||'',a.attr&&a.attr.gameApp&&(h=gameWhiteFileExtName);for(let b=0,c=g.length;b<c;b++){const c=g[b],e=path.extname(c);if(!alreadyWrite[e]&&h[e]){let b=f.getFile(c,null);if('.json'===e&&'plugin.json'!==c){const d=await checkPluginPageJSON(a,c.replace(/\.json$/,''));b=new Buffer(JSON.stringify(d),'utf8')}compileOther(a,{fileBuffer:b,srcFilePath:path.join(i,c),destFilePath:path.join(d,i,c)})}}fs.writeFileSync(path.join(d,'project.config.json'),JSON.stringify({miniprogramRoot:a.miniprogramRoot,pluginRoot:a.pluginRoot||''}))}fs.existsSync(path.join(d,'project.config.json'))||fs.writeFileSync(path.join(d,'project.config.json'),'{}')}module.exports=compileProjectOther;
;}(require("lazyload"), require);
