;!function(require, directRequire){;"use strict";const path=require("path"),checkAppConfig=require('./1dea83a77e99a7c94f6b6f01f5c175b0.js'),weappConfig=require('./6242f55dbdfe53c2f07b7a51568311f2.js'),envConfig=require('./37be435102276ea9cf47609ff6535cd4.js'),store=require('./bc78839ccca8df9e5ceeb7fae11b7be2.js'),projectActions=require('./cc2c2970ff81ae4a83123e81ee123da2.js'),projectManager=require('./3bfffbe88b3d923921f851c0697974fe.js'),plugin=require('./b6d8659542036f6a35f417e0693e56db.js'),env={USER_DATA_PATH:envConfig.USER_DATA_PATH};async function getPluginPages(a,b,c=""){const d={pages:[],page:{}};if(!b)return d;for(const e in b){const f=b[e],g=await plugin.getPluginJSON(a,{version:f.version,pluginId:f.provider});if(g.pages)for(const a in g.pages)d.pages.push(`${c}${g.pages[a]}`);if(g.page)for(const a in g.page)d.page[`${c}${a}`]=g.page[a]}return d}async function getWxConfig(a){const b=await checkAppConfig(a);let c=a.runtimeAttr&&a.runtimeAttr.setting||{};const d=a.runtimeAttr&&a.runtimeAttr.appType||0;c=Object.assign({},weappConfig.setting,c);let e=Object.assign({},b,{appType:d,wxAppInfo:{maxRequestConcurrent:c.MaxRequestConcurrent,maxUploadConcurrent:c.MaxUploadConcurrent,maxDownloadConcurrent:c.MaxDownloadConcurrent,maxWorkerConcurrent:c.MaxWorkerConcurrent}});if(0===Object.keys(e.plugins).length&&delete e.plugins,b.mainPlugins){const c=await getPluginPages(a,b.mainPlugins);e.pages=e.pages.concat(c.pages),e.page=Object.assign({},e.page,c.page)}if(b.subPackages)for(const c of b.subPackages){const b=c.pages.map((a)=>path.posix.join(c.root,a));if(e.pages=e.pages.concat(b),c.plugins){const b=await getPluginPages(a,c.plugins,c.root);e.pages=e.pages.concat(b.pages),e.page=Object.assign({},e.page,b.page)}}if(b.page=e.page,e.plugins){let b,c=!1,d=!1;if(a.pluginInfo&&0<a.pluginInfo.length){const b={};for(const a in e.plugins)b[e.plugins[a].provider]=e.plugins[a].version;for(const e of a.pluginInfo){if(!e||!e.current||!e.current.innerVersion){c=!0;break}if(e.current.version!==b[e.appid]){d=!0;break}}}else c=!0;if(c||d)try{const a=await projectManager.getLatestPluginInfo();b=a.map((a)=>({plugin_id:a.appid,inner_version:a.current.innerVersion})),setTimeout(()=>{store.dispatch(projectActions.setPluginInfo(a))})}catch(a){}else b=a.pluginInfo.map((a)=>({plugin_id:a.appid,inner_version:a.current.innerVersion}));for(const a in e.plugins)e.plugins[a]&&"dev"===e.plugins[a].version&&(b||(b=[]),b.push({plugin_id:e.plugins[a].provider,inner_version:0}));e.appContactInfo={call_plugin_info:b}}const f=store.getState(),g=f.simulator.appLaunchInfo||{path:e.pages[0],scene:weappConfig.SCENE_DEFAULT,query:{}};return e.accountInfo={appId:projectManager.getProjectAppID(a),nickname:f.user.nickName,icon:a.runtimeAttr&&a.runtimeAttr.appImageUrl},e=Object.assign({},e,{platform:"devtools",appLaunchInfo:g,env}),e}module.exports=getWxConfig;
;}(require("lazyload"), require);
