;!function(require, directRequire){;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const asar=require("asar"),fs=require("fs"),fsExtra=require("fs-extra"),path=require("path"),nativeWxapkgPack=require('./e5fa35c3c8e81bc6466b4b8eb436113b.js'),nativeWxapkgUnpack=require('./29552ee79b3c130ddd9b6e8c13c40be9.js'),topTools=require('./84b183688a46c9e2626d3e6f83365e13.js');async function asarPack(a,b){return new Promise((c,d)=>{try{asar.createPackage(a,b,()=>{c()})}catch(a){d(a)}})}exports.asarPack=asarPack;async function asarUnpack(a,b){return asar.extractAll(a,b)}exports.asarUnpack=asarUnpack;async function asarExtractFile(a,b){return asar.extractFile(a,b)}exports.asarExtractFile=asarExtractFile;async function wxapkgPack(a,b){await nativeWxapkgPack(a,b)}exports.wxapkgPack=wxapkgPack;async function wxapkgUnpack(a,b){b=topTools.normalizePath(b);const c=await nativeWxapkgUnpack(fs.readFileSync(a,null));fsExtra.ensureDirSync(b);const d={};for(const e in c){const a=topTools.normalizePath(path.join(b,e));if(!a.startsWith(b))throw new Error("invalid package");d[a]=c[e]}for(const c in d)fsExtra.outputFileSync(c,d[c])}exports.wxapkgUnpack=wxapkgUnpack;async function wxapkgExtractFile(){}exports.wxapkgExtractFile=wxapkgExtractFile;
;}(require("lazyload"), require);
