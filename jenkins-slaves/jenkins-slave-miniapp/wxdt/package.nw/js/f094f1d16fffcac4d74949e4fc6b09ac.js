;!function(require, directRequire){;"use strict";const tslib_1=require("tslib"),React=require("react"),{connect}=require("react-redux"),LocationWebview=require('./9e26657bed9c052dbb6165661dc5b956.js'),NavigationBar=require('./d559680a1a0c2551cbce1a9fb152cb99.js'),StatusBar=require('./4389a88e405d1d37f36c16fc0ec96540.js'),simulatorActions=require('./ba23d8b47b1f4ea08b9fd49939b9443f.js'),tools=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),{enterBackground,enterForeground}=require('./a3959bb900db9f65ed2e9c5dfa6977b7.js'),locales=require('./common/locales/index.js'),mapStateToProps=(a)=>{const b=a.toolbar.deviceInfo||{},c=a.simulator.location||{};return Object.assign({deviceScale:a.toolbar.deviceScale,statusbarHeight:b.statusbarHeight,navigationbarHeight:b.navigationbarHeight,height:b.screenHeight,width:b.screenWidth,webviewHeight:b.screenHeight-b.statusbarHeight-b.navigationbarHeight},c)},mapDispatchToProps=(a)=>({hideMap:tools.bindActionCreators(simulatorActions.hideMap,a)});let LocationWebviewContainer=class extends React.Component{constructor(a){super(a),this.chooseLocation=(a)=>{this.res=a},this.onCancelClick=()=>{this.props.hideMap({callbackID:this.props.callbackID,res:{errMsg:`${this.props.api}:cancel`}})},this.onConfirmClick=()=>{const a=this.res.latlng&&this.res.latlng.lat||this.props.latitude,b=this.res.latlng&&this.res.latlng.lng||this.props.longitude;this.props.hideMap({callbackID:this.props.callbackID,res:{errMsg:`${this.props.api}:ok`,name:this.res.poiname||"",address:this.res.poiaddress||"",latitude:a,longitude:b}})},this.res={}}componentWillMount(){enterBackground("locationWebview")}componentWillUnmount(){enterForeground("locationWebview")}render(){const a=this.props;let b;return b=global.onlySimulator?{top:0,left:0,height:a.height,width:a.width,transform:`scale(${a.deviceScale})`,transformOrigin:"50% 0",zIndex:10}:{marginLeft:-a.width/2,height:a.height,width:a.width,transform:`scale(${a.deviceScale})`,transformOrigin:"50% 0",zIndex:10},React.createElement("div",{className:"simulator",style:b},React.createElement(StatusBar,{height:a.statusbarHeight,backgroundColor:"#000000"}),React.createElement(NavigationBar,{cover:!0,showLeftBtn:!0,frontColor:"#ffffff",backgroundColor:"#000000",onLeftBtnClick:this.onCancelClick,showRightBtn:"chooseLocation"===a.api,onCustomRightClick:this.onConfirmClick,leftBtnText:"chooseLocation"===a.api?locales.config.CANCEL:"",rightBtnText:locales.config.CONFIRM,title:locales.config.CHOOSE_LOCATION}),this.props.show?React.createElement(LocationWebview,{chooseLocation:this.chooseLocation,src:a.src,width:a.width/a.deviceScale,height:a.webviewHeight/a.deviceScale}):null)}};LocationWebviewContainer=tslib_1.__decorate([locales.mixin],LocationWebviewContainer),module.exports=connect(mapStateToProps,mapDispatchToProps)(LocationWebviewContainer);
;}(require("lazyload"), require);
