;!function(require, directRequire){;"use strict";const tslib_1=require("tslib"),React=require("react"),clickKeyConfig=require('./eadce02c750c875a10680bcfedadec88.js'),toolbarActions=require('./fc137838572a83604db39acff8e909e0.js'),tools=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),windowActions=require('./a8c87029da0fa06e986298d447ab0fe2.js'),{connect}=require("react-redux"),locales=require('./common/locales/index.js'),mapStateToProps=(a)=>{const b=a.project.current||{},c=a.toolbar.clickKey===clickKeyConfig.TOOLBARCONFIGLIST,d=a.toolbar.config;return{show:c,titleShow:d.title,project:b}},mapDispatchToProps=(a)=>({setToolbarConfig:tools.bindActionCreators(toolbarActions.setToolbarConfig,a),setToolbarConfigWnd:tools.bindActionCreators(windowActions.setToolbarConfig,a)});let ConfigList=class extends React.Component{constructor(){super(...arguments),this.onManageClick=()=>{this.props.setToolbarConfigWnd({show:!0})}}onTitleShowClick(a){this.props.setToolbarConfig({title:a})}render(){const a=this.props,b=a.project.isMiniCode;return React.createElement("div",{className:"ui-popover",style:{top:a.top,left:a.left,display:a.show?"":"none"}},React.createElement("div",{className:"ui-dropdown"},React.createElement("div",{className:"ui-dropdown-item",onClick:this.onTitleShowClick.bind(this,!1)},React.createElement("div",{className:"ui-dropdown-item-hd"},a.titleShow?null:React.createElement("i",{className:"ui-icon-tick"})),React.createElement("div",{className:"ui-dropdown-item-bd"},React.createElement("span",null,locales.config.TOOLBAR_CONFIGLIST_ONLY_ICON))),React.createElement("div",{className:"ui-dropdown-item",onClick:this.onTitleShowClick.bind(this,!0)},React.createElement("div",{className:"ui-dropdown-item-hd"},a.titleShow?React.createElement("i",{className:"ui-icon-tick"}):null),React.createElement("div",{className:"ui-dropdown-item-bd"},React.createElement("span",null,locales.config.TOOLBAR_CONFIGLIST_DEFAULT))),React.createElement("div",{className:"ui-dropdown-divider",style:{display:b?"none":""}}),React.createElement("div",{className:"ui-dropdown-item",onClick:this.onManageClick,style:{display:b?"none":""}},React.createElement("div",{className:"ui-dropdown-item-hd"}),React.createElement("div",{className:"ui-dropdown-item-bd"},React.createElement("span",null,locales.config.TOOLBAR_ICON_MANAGER_TITLE)))))}};ConfigList=tslib_1.__decorate([locales.mixin],ConfigList),module.exports=connect(mapStateToProps,mapDispatchToProps)(ConfigList);
;}(require("lazyload"), require);
