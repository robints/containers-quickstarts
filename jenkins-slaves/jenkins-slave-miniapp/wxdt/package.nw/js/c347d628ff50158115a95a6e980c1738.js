;!function(require, directRequire){;"use strict";const React=require("react"),PropTypes=require("prop-types"),NavigationBar=require('./d8460cd7eec9b5ac3077a1c3fc6a50d2.js'),Tabbar=require('./6893c66b236a52295ea5c35a8052630d.js'),Webview=require('./48ed383395967d737f11ebc42820b913.js'),HTMLWebview=require('./41c99b908d0cb118c2a6fcf3c306663c.js'),InfoBar=require('./6fc2d18cec70b19ca4d1e2defbdf43cd.js'),Toolbar=require('./1ca0b7713664710bff99ca9c6d29c43c.js'),Resizable=require('./ea653f45dc25181ca4f1b108175009b7.js'),classNames=require("classnames"),StatusBar=require('./d3fc1d4b6cfd440a6300e62456252a06.js'),BackMode=require('./137588fc97010af6b33c2be1d533447b.js'),IPhoneXHead=require('./245e991bfa34036d0454bd1d61b4a3b2.js'),DebuggerMask=require('./c8af78c47c933020966663d8d52d77b4.js'),SimulatorPage=require('./514a851d54b7c3c137c5121a2a8a1174.js'),SimulatorComponent=require('./42821d634e3cc6335ce2160046e31ec3.js');class Simulator extends React.Component{constructor(a){super(a),this.onResizeStop=(a,b)=>{this.props.windowActions.setSimulator({width:b})},this.state={simulatorStyle:{}}}componentDidMount(){this.props.isPopup&&this.adjustWindowSize(),this.props.appLaunched&&this.props.simulatorActions.compile(),chrome.fontSettings.setMinimumFontSize({pixelSize:1}),global.online&&setTimeout(()=>{global.Win.resizeBy(5,5)},1e3)}componentWillReceiveProps(a){a.vibrate!==this.props.vibrate&&("short"===a.vibrate.type?this.vibrateAnimation(1):"long"===a.vibrate.type&&this.vibrateAnimation(3)),this.props.isPopup&&(a.screenWidth!==this.props.screenWidth||a.screenHeight!==this.props.screenHeight)&&this.adjustWindowSize()}getChildContext(){return{isPopup:this.props.isPopup,window:this.props.win?this.props.win:null}}async vibrateAnimation(a){if(0>=a)return void this.props.simulatorActions.setVibrate("none");const b=[`translate(1%,5px) scale(${this.props.deviceScale})`,`translate(-1%,5px) scale(${this.props.deviceScale})`],c=(a)=>{return new Promise((b)=>{return 0>=a.length?(this.setState({simulatorStyle:{}}),void b()):void(this.setState({simulatorStyle:{transition:"all linear 0.05s",transform:a[0]}}),a.splice(0,1),setTimeout(async()=>{await c(a),b()},50))})};await c(b),await this.vibrateAnimation(--a)}adjustWindowSize(){setTimeout(()=>{const a=this.props.win;if(a){const b=this.props.screenWidth;let c=this.props.screenHeight;const d=document.getElementsByClassName("simulator-toolbar");c+=d[0]?d[0].offsetHeight:27,a.width=b-(a.window.innerWidth-a.width),a.height=c-(a.window.innerHeight-a.height)}})}getWebivewPosition(a){const b=this.props;let c=b.screenHeight,d=0;const e=a.showNavigationBar,f=a.showStatusBar;return this.props.fullscreen?{top:d,height:c}:(e&&(c-=b.navigationbarHeight,d+=b.navigationbarHeight),f&&(c-=b.statusbarHeight,d+=b.statusbarHeight),{top:d,height:c})}getWebviewNodes(){const a=this.props,b=[];let c,d;for(const e in this.props.fullscreen?(c=a.screenHeight,d=0):(c=a.screenHeight-a.navigationbarHeight-a.statusbarHeight,d=a.navigationbarHeight+a.statusbarHeight),a.webviewInfos){const c=a.webviewInfos[e];let{height:d,top:f}=this.getWebivewPosition(c);a.tabbarShow&&-1!==c.tabbarIndex&&!a.isCustomTabbar&&("top"===a.tabbarPosition?(d-=a.tabbarHeight,f+=a.tabbarHeight):d-=a.tabbarHeight),b.push(React.createElement(Webview,{key:e,show:a.currentWebviewID+""==e,info:c,top:f,height:d}))}if(a.anyHtmlWebviewInfo){const e=a.anyHtmlWebviewInfo;b.push(React.createElement(HTMLWebview,{webviewID:e.webviewID,nosupport:!0,url:e.url||"",cangoback:!0,width:a.screenWidth,height:c,left:0,top:d}))}return a.standbyWebview&&b.push(React.createElement(Webview,{key:a.standbyWebview.id,show:!1,info:a.standbyWebview,top:d,height:c,type:"standby"})),0>=b.length&&b.push(React.createElement(Webview,{key:-1,show:!0,info:{},top:d,height:c,type:"tip"})),b}getSimulatorInner(a){const b=this.props;let c=React.createElement(NavigationBar,null);return b.anyHtmlWebviewInfo&&(c=React.createElement(NavigationBar,{showLeftBtn:!0,onLeftBtnClick:()=>{b.simulatorActions.setAnyHtmlWebview()}})),React.createElement("div",{className:"simulator-shell"},React.createElement("div",{className:"simulator",style:a},React.createElement(StatusBar,null),React.createElement(IPhoneXHead,null),c,this.getWebviewNodes(),React.createElement(Tabbar,null),React.createElement(SimulatorComponent,null),React.createElement(DebuggerMask,null)),React.createElement(SimulatorPage,null))}render(){const a=this.props,b=classNames("simulator-container",{"ui-invisible":!a.show});let c;return global.onlySimulator?(c=Object.assign({top:0,left:0,width:a.screenWidth,height:a.screenHeight,transform:`scale(${a.deviceScale})`,transformOrigin:"50% 0"},this.state.simulatorStyle),global.Win.width!==c.width&&(global.Win.width=c.width),global.Win.height!==c.height&&(global.Win.height=c.height+("darwin"===process.platform?0:26))):c=Object.assign({width:a.screenWidth,height:a.screenHeight,transform:`scale(${a.deviceScale})`,transformOrigin:"50% 0",marginLeft:-a.screenWidth/2},this.state.simulatorStyle),this.props.isPopup?(c.top="0",c.left="inherit",c.marginLeft="inherit",React.createElement("div",{style:{width:"100%",height:"100%"},className:b},React.createElement(Toolbar,null),this.getSimulatorInner(c),React.createElement(BackMode,null))):React.createElement(Resizable,{width:a.width,height:"100%",className:b,style:{minWidth:a.shellMinWidth},leftResizable:a.workbenchShow&&"right"===a.position,rightResizable:a.workbenchShow&&"left"===a.position,onResizeStop:this.onResizeStop},React.createElement(Toolbar,null),this.getSimulatorInner(c),React.createElement(InfoBar,null),React.createElement(BackMode,null),React.createElement("div",{className:"ui-divider-vertical",style:{pointerEvents:"none"}}))}}Simulator.childContextTypes={isPopup:PropTypes.bool,window:PropTypes.object},module.exports=Simulator;
;}(require("lazyload"), require);
