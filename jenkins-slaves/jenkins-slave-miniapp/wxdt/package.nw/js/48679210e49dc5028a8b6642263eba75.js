;!function(require, directRequire){;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const path=require("path"),fs=require("fs"),babelCodeFrame=require("babel-code-frame"),tools=require('./84b183688a46c9e2626d3e6f83365e13.js'),jsonParse=require('./libs/jsonlint.js').parser,locales=require('./common/locales/index.js'),contentWatcher=require('./162bf2ee28b76d3b3d95b685cede4146.js'),gameErrcodeConfig=require('./2bc7cd511c5a7e0e403126d943b041b1.js'),compileTypeConfig=require('./9fdd4ac31a05c27355910f0d74accd4c.js'),weappConfig=require('./6242f55dbdfe53c2f07b7a51568311f2.js'),colorUtils=require('./5b7e808cbfe14a62c21959fb1771749d.js');jsonParse.parseError=jsonParse.lexer.parseError=function(a,b){throw b};function throwError(a,b=gameErrcodeConfig.GAME_JSON_CONTENT_ERR){const c=new Error(a);throw c.code=b,c}function getErrLine(a,b,c,d){c=0<c?c:1;const e=babelCodeFrame(a,b,c);return`${d}\n${e}`}function checkNavigateToMiniProgramAppIdList(a,b){const c=[];if(b.navigateToMiniProgramAppIdList){"array"!==tools.getType(b.navigateToMiniProgramAppIdList)&&throwError(locales.config.JSON_CONTENT_SHOULD_BE.format([`navigateToMiniProgramAppIdList`,"array"])),b.navigateToMiniProgramAppIdList.forEach((a,b)=>{"string"!==tools.getType(a)&&c.push(locales.config.JSON_CONTENT_SHOULD_BE.format([`navigateToMiniProgramAppIdList[${b}]`,"string"]))});const d=a.runtimeAttr&&a.runtimeAttr.setting&&a.runtimeAttr.setting.NavigateMiniprogramLimit||weappConfig.setting.NavigateMiniprogramLimit;b.navigateToMiniProgramAppIdList.length>d&&c.push(locales.config.EXCEED_LIMIT.format([`navigateToMiniProgramAppIdList`,d]))}0<c.length&&throwError(c.join("\n"))}function checkSubpackages(a,b,c){const d=require('./6242f55dbdfe53c2f07b7a51568311f2.js'),e=Object.assign({},d.setting,a.runtimeAttr&&a.runtimeAttr.setting),f=[];let g="subPackages";if(c.subpackages&&(g="subpackages",c.subPackages=c.subpackages,delete c.subpackages),c.subPackages){"array"!==tools.getType(c.subPackages)&&throwError(locales.config.JSON_CONTENT_SHOULD_BE.format([g,"Array"])),c.subPackages.length>e.MaxSubPackageLimit&&throwError(locales.config.EXCEED_LIMIT.format([g,e.MaxSubPackageLimit]));const a={},d={};c.subPackages.forEach((c,e)=>{if("undefined"!=typeof c.name&&("string"!==tools.getType(c.name)&&f.push(locales.config.JSON_CONTENT_SHOULD_BE.format([`${g}[${e}].name`,"String"])),a[c.name]&&f.push(locales.config.JSON_CONTENT_EXISTED.format(`${g}[${e}].name`)),a[c.name]=!0),"string"!==tools.getType(c.root))return void f.push(locales.config.JSON_CONTENT_SHOULD_BE.format([`${g}[${e}].root`,"String"]));if(0===c.root.indexOf("."))return void f.push(locales.config.JSON_SHOULD_NOT_START_WITH.format([`${g}[${e}].root`,"."]));c.root.startsWith("/")||(c.root=tools.normalizePath("/"+c.root)),c.root=/\.js$/.test(c.root)?tools.normalizePath(c.root):tools.normalizePath(c.root+"/"),d[c.root]&&f.push(locales.config.JSON_CONTENT_EXISTED.format(`${g}[${e}].root`)),d[c.root]=!0;const h=path.join(b,c.root);if(!fs.existsSync(h))f.push(locales.config.JSON_CONTENT_NOT_FOUND.format(`${g}[${e}].root`));else{const a=fs.statSync(h);a.isDirectory()&&(!/\/$/.test(c.root)&&(c.root+="/"),!fs.existsSync(path.join(h,"./game.js"))&&f.push(locales.config.JSON_CONTENT_NOT_FOUND.format(`${h}game.js`)))}})}0<f.length&&throwError(f.join("\n"))}function checkLoadingImageUrl(a,b){const{loadingImageInfo:c}=b;"undefined"==typeof c||("object"!==tools.getType(c)&&throwError(locales.config.JSON_CONTENT_SHOULD_BE.format(["loadingImageInfo","object"])),"string"!==tools.getType(c.path)&&throwError(locales.config.JSON_CONTENT_SHOULD_BE.format(["loadingImageInfo.path","string"])),c.path.startsWith(".")&&throwError(locales.config.JSON_SHOULD_NOT_START_WITH.format(["loadingImageInfo.path","."])),c.path.startsWith("/")&&throwError(locales.config.JSON_SHOULD_NOT_START_WITH.format(["loadingImageInfo.path","/"])),!fs.existsSync(path.join(a,c.path))&&throwError(locales.config.JSON_CONTENT_NOT_FOUND.format(`loadingImageInfo.path: ${c.path}`)),"string"!==tools.getType(c.progressBarColor)&&throwError(locales.config.JSON_CONTENT_SHOULD_BE.format(["loadingImageInfo.progressBarColor","string"])),!colorUtils.isHexColor(c.progressBarColor)&&throwError(locales.config.JSON_CONTENT_SHOULD_BE.format(["loadingImageInfo.progressBarColor","HexColor"])))}async function checkGameJSON(a){const b=await contentWatcher(a),c=b.srcPath,d=require('./6242f55dbdfe53c2f07b7a51568311f2.js');let f="";try{f=b.getFile("game.json")}catch(a){f="",throwError(a.message,gameErrcodeConfig.GAME_JSON_READ_ERR)}let e={};try{e=jsonParse.parse(f)}catch(a){const b=`locales.config.COMPILE_ERROR_POSTFIX.format('game.json'): Expecting ${a.expected}, got ${a.token}`,c=getErrLine(f,a.line,a.loc.first_column,b);throwError(c,gameErrcodeConfig.GAME_JSON_PARSE_ERR)}const g=e.deviceOrientation;g&&("string"===tools.getType(g)?!["portrait","landscape","landscapeLeft","landscapeRight"].includes(g)&&throwError(locales.config.JSON_CONTENT_SHOULD_BE.format(["deviceOrientation",`"portrait", "landscape", "landscapeLeft" ${locales.config.OR} "landscapeRight"`])):throwError(locales.config.JSON_CONTENT_SHOULD_BE.format(["deviceOrientation",locales.config.STRING_TYPE]))),e.networkTimeout&&"object"!==tools.getType(e.networkTimeout)&&throwError(locales.config.JSON_CONTENT_SHOULD_BE.format(["networkTimeout","Object"]));const h=e.openDataContext;if(e.openDataContext||e.subContext){let a;if(a=(e.openDataContext||e.subContext).replace("./",""),/\/$/.test(a)||(a=`${a}/`),("/"===a||"./"===a||0===a.indexOf("."))&&throwError(locales.config.DIRECTORY_SETTING_NOT_LEGAL.format("subContext"),gameErrcodeConfig.GAME_SUBCONTEXT_ERR),!fs.existsSync(path.join(c,a)))throwError(locales.config.JSON_CONTENT_SHOULD_BE.format([h?"openDataContext":"subContext",locales.config.DIRECTORY]));else{const b=fs.statSync(path.join(c,a));b.isDirectory()||throwError(locales.config.JSON_CONTENT_SHOULD_BE.format([h?"openDataContext":"subContext",locales.config.DIRECTORY]))}const d=path.join(a,h?"index.js":"sub.js");b.exists(d)||throwError(locales.config.JSON_PAGE_JS_NOT_EXISTS.format(["game.json",h?"openDataContext":"subContext",d]),gameErrcodeConfig.GAME_SUBJS_NOT_FOUND),h?(e.openDataContext=tools.normalizePath(a),e.subContext=tools.normalizePath(a)):e.subContext=tools.normalizePath(a)}const i=a.compileType;if(i===compileTypeConfig.conversation||i===compileTypeConfig.search){const b=e.widgets;let d,f="";if(!b)d=new Error(locales.config.JSON_WIDGETS_EMPTY.format("game.json"));else if("array"!==tools.getType(b))d=new Error(locales.config.JSON_WIDGETS_NOT_ARRAY.format("game.json"));else{const e=[];b.forEach((b,d)=>{if("object"!==tools.getType(b))e.push(locales.config.JSON_WIDGETS_ITEM_NOT_OBJECT.format(["game.json",d]));else if("conversation"!==b.type&&"search"!==b.type)e.push(locales.config.JSON_WIDGETS_TYPE_INVALID.format(["game.json",d,"conversation\u3001search"]));else if(!b.path||"string"!==tools.getType(b.path))e.push(locales.config.JSON_WIDGETS_PATH_NOT_FOUND.format(["game.json",d]));else if(!fs.existsSync(path.join(c,b.path)))e.push(locales.config.JSON_WIDGETS_PATH_NOT_FOUND.format(["game.json",d]));else{const a=fs.statSync(path.join(c,b.path));a.isDirectory()?!fs.existsSync(path.join(c,b.path,"widget.js"))&&e.push(locales.config.JSON_WIDGETS_JS_NOT_FOUND.format(["game.json",d,"widget.js"])):e.push(locales.config.JSON_WIDGETS_PATH_SHOULD_BE_DIR.format(["game.json",d]))}f||b.type!==a.compileType||(f=b.path)}),f||e.push(locales.config.JSON_WIDGETS_TYPE_NOT_FOUND.format(["game.json",a.compileType])),0<e.length&&(d=new Error(e.join("\n")))}if(d)throw d.code=gameErrcodeConfig.GAME_JSON_CONTENT_ERR,d}return checkSubpackages(a,c,e),checkNavigateToMiniProgramAppIdList(a,e),checkLoadingImageUrl(c,e),e}module.exports=checkGameJSON;
;}(require("lazyload"), require);
