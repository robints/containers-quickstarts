'use strict';!function(require,directRequire){const a=require('react'),b=require('./e9e3fd38aeedddd6db73d1d015ff6952.js'),c=require('./ba23d8b47b1f4ea08b9fd49939b9443f.js'),d=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),e=require('./56c390e04c10e91a4aa2a2c19d9a885d.js'),{connect:f}=require('react-redux');class g extends a.Component{constructor(a){super(a)}componentDidMount(){this._onPluginMessage=this.onPluginMessage.bind(this),this.pluginMessager=b.get('trace_miniprogram'),this.pluginMessager.register(this._onPluginMessage),this.pluginMessager.triggerOnEvent('LIB_VERSION_CHANGE',{libVersion:this.props.libVersion})}componentWillUnmount(){this.pluginMessager.unRegister(this._onPluginMessage)}componentWillReceiveProps(a){a.libVersion!==this.props.libVersion&&this.pluginMessager.triggerOnEvent('LIB_VERSION_CHANGE',{libVersion:a.libVersion})}onPluginMessage(a){try{a=JSON.parse(a)}catch(a){}let{command:b}=a;switch(b){case'COMPILE':{this.props.compile({origin:e.COMPILE_ORIGIN.TRACE});break}}}render(){return null}}module.exports=f((a)=>{return{libVersion:a.project.current.libVersion}},(a)=>({compile:d.bindActionCreators(c.compile,a)}),null,{withRef:!0})(g)}(require('lazyload'),require);