;!function(require, directRequire){;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const request=require('./15ba1827c7f6564a45df6bd44da3a977.js'),urlConfig=require('./f171257bbcaef547a3cf27266ccb0db2.js'),log=require('./72653d4b93cdd7443296229431a7aa9a.js'),tools=require('./84b183688a46c9e2626d3e6f83365e13.js');let NameMapingCache={};function checkPrefix(a,b){for(const c of b)if(0===a.indexOf(c))return c;return""}async function uglifyFileNames(a,b,c=[]){const d=[];for(const e of a){let a=!1;for(const c of b)if("file"===c.type&&c.value===e||"folder"===c.type&&0===e.indexOf(c.value)||"regex"===c.type&&c.value.test(e)){a=!0;break}a||NameMapingCache[e]||d.push(e)}try{if(0<d.length){const{body:a}=await request({url:urlConfig.translateFilename,method:"post",body:JSON.stringify({path:d}),needToken:1,needAppID:1});a.pairs.forEach((a)=>{const b=checkPrefix(a.origin,c);NameMapingCache[a.origin]=`${b}${a.translated}.js`})}}catch(a){log.error(`uglifyFileNames catch error ${a}`);const b={};for(const a of d){const d=checkPrefix(a,c);b[a]=`${d}${tools.generateMD5(a)}.js`}NameMapingCache=Object.assign({},NameMapingCache,b)}return NameMapingCache}exports.uglifyFileNames=uglifyFileNames;function getFileNameMapping(){return NameMapingCache}exports.getFileNameMapping=getFileNameMapping;
;}(require("lazyload"), require);
