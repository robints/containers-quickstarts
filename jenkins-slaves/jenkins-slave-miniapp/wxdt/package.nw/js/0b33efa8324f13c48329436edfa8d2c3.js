;!function(require, directRequire){;"use strict";const React=require("react"),{connect}=require("react-redux"),ToolbarItem=require('./aa9fff323e28f4dcd42f368a90ea14e6.js'),toolbarActions=require('./fc137838572a83604db39acff8e909e0.js'),clickKeyConfig=require('./eadce02c750c875a10680bcfedadec88.js'),tools=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),C=require('./56c390e04c10e91a4aa2a2c19d9a885d.js'),NetworkDropdown=require('./adf91eab0ec6d374e49bef9d1646b617.js'),mapStateToProps=(a)=>{const b=a.toolbar.network,c=b.list.map((a)=>({name:C.NETWORK_STATUS_DISPLAY[a]||a}));return{show:a.toolbar.clickKey===clickKeyConfig.NETWORK,list:c,currentWording:c[b.current].name||"WiFi",top:27,left:219,width:120}},mapDispatchToProps=()=>({});class NetworkToolbarItem extends React.Component{constructor(a){super(a),this.onShowClick=()=>{this.setState({showTs:Date.now()})},this.state={showTs:0}}render(){return React.createElement(ToolbarItem,{show:this.props.show,currentWording:this.props.currentWording,onShowClick:this.onShowClick,dropdown:NetworkDropdown,dropdownType:"network",showTs:this.state.showTs})}}module.exports=connect(mapStateToProps,mapDispatchToProps)(NetworkToolbarItem);
;}(require("lazyload"), require);
