;!function(require, directRequire){;"use strict";const React=require("react"),{connect}=require("react-redux"),QueryString=require("querystring"),webviewPool=require('./a78e6d6a87de1708226375ca4c320d76.js'),gameNativeViewMessager=require('./6b70fc1a2dbee232784064c344aaaf2b.js'),gameserviceMessager=require('./e3681b47a6ce46a8998b8cdff40bdb12.js'),log=require('./72653d4b93cdd7443296229431a7aa9a.js'),C=require('./56c390e04c10e91a4aa2a2c19d9a885d.js'),messageCenter=require('./ff946754202ecf377034d29daac7c8d9.js'),tools=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),simulatorActions=require('./ba23d8b47b1f4ea08b9fd49939b9443f.js'),{validType,tokenManager}=require('./dc244a5ba483ad6e0acd267d3b91b282.js'),mapStateToProps=(a)=>{const b=a.toolbar.deviceInfo,c=a.simulator.orientation&&/^landscape(Left|Right)?$/.test(a.simulator.orientation.value),d=a.simulator.operateNativeView,e=c?b.screenWidth:b.screenHeight;return{width:c?b.screenHeight:b.screenWidth,height:e,deviceScale:a.toolbar.deviceScale,dpr:b.dpr,compileCommand:a.simulator.compileCommand,project:a.project.current,isInBackground:a.simulator.backgroundShow,operateNativeView:d}},mapDispatchToProps=(a)=>({assdkCallback:tools.bindActionCreators(simulatorActions.assdkCallback,a)});class NativeView extends React.Component{constructor(a){super(a),this.onNativeViewMessage=(a)=>{let b={};try{if(b=JSON.parse(a),"WEBVIEW_PUBLISH"===b.command){const a=b.data.eventName;"videoPlayerInsert"===a?this.props.assdkCallback({callbackID:this.props.node.callbackID,res:{errMsg:`${this.props.node.api}:ok`}}):"onNativeViewEvent"===a&&gameserviceMessager.triggerOnEvent({eventName:b.data.data.eventName,data:b.data.data.data})}}catch(b){log.error(`onNativeViewMessage catch ${a} error ${b}`)}},this.key="",this.lastWidth=0,this.lastHeight=0}componentDidMount(){this.insertView(this.props.node)}componentWillReceiveProps(a){a.operateNativeView!==this.props.operateNativeView&&a.operateNativeView.id===a.node.id&&a.operateNativeView.name===a.node.name&&setTimeout(()=>{this.operateNativeView(this.props.operateNativeView)}),a.node!==this.props.node&&setTimeout(()=>{this.updateView(this.props.node)}),a.isInBackground!==this.props.isInBackground&&this.backgroundModeChange(a.isInBackground)}componentWillUnmount(){gameNativeViewMessager.unRegister(this.key,this.onNativeViewMessage)}backgroundModeChange(a){a?gameNativeViewMessager.triggerOnEvent({webviewID:this.key,eventName:"onAppEnterBackground"}):gameNativeViewMessager.triggerOnEvent({webviewID:this.key,eventName:"onAppEnterForeground"})}operateNativeView(a){if(a)switch(a.action){case"operate":this.operateView(a);}}insertView(a){const{left:b,top:c,width:d,height:e}=a.position,f=this.props.deviceScale,g=this.key=`${a.name}${a.id}`,h=this.webview=webviewPool.get("simulator",{width:d,height:e,dpr:this.props.dpr});this.lastWidth=d,this.lastHeight=e,h.needDebugger=1;const i=tokenManager.getSessionToken(validType.UA_TOKEN);h.setUserAgentOverride(`wechatdevtools port/${global.messageCenterPort} gamenativeview/${g} token/${i}`),h.setAttribute("allowtransparency",!0),h.setAttribute("style",`position:absolute;left:${b}px;top:${c}px;height:${d/f}px;width:${d/f}px;pointer-events:initial;`);const j={videoPlayerId:a.id,data:JSON.stringify(a.data),name:a.name};h.src=`http://127.0.0.1:${global.proxyPort}/game/nativeview.html?${QueryString.stringify(j)}`,h.attach(this.container),h.on("dialog",(a)=>{a.preventDefault();const b=a.messageType,c=a.messageText,d=a.dialog;"prompt"===b&&(c===C.GET_MESSAGE_TOKEN?d.ok(messageCenter.getToken("GAMENATIVEVIEW")):d.ok(""))}),gameNativeViewMessager.register(g,this.onNativeViewMessage),this.webview=h}removeView(){this.webview&&(this.webview.detach(),this.webview=void 0),gameNativeViewMessager.unRegister(this.key,this.onNativeViewMessage)}updateView(a){if(a.position&&this.webview){const{left:b,top:c,width:d,height:e}=a.position,f=this.props.deviceScale;this.webview.setAttribute("style",`position:absolute;left:${b}px;top:${c}px;height:${e/f}px;width:${d/f}px;pointer-events:initial;`),(this.lastHeight!==e||this.lastWidth!==d)&&(this.lastWidth=d,this.lastHeight=e,this.webview.setOffset({width:d,height:e,dpr:this.props.dpr}))}gameNativeViewMessager.triggerOnEvent({webviewID:this.key,eventName:"updateNativeView",data:a.data})}operateView(a){a&&"operate"===a.action&&gameNativeViewMessager.triggerOnEvent({webviewID:this.key,eventName:"operateNativeView",data:a.data})}render(){return React.createElement("div",{ref:(a)=>this.container=a,style:{}})}}module.exports=connect(mapStateToProps,mapDispatchToProps)(NativeView);
;}(require("lazyload"), require);
