;!function(require, directRequire){;"use strict";const tslib_1=require("tslib"),React=require("react"),{connect}=require("react-redux"),request=require('./233d77ecf0781f44985f684f70e316d0.js'),C=require('./56c390e04c10e91a4aa2a2c19d9a885d.js'),log=require('./72653d4b93cdd7443296229431a7aa9a.js'),css=require('./3b5f8e2469c474c8d433c1c6926d8999.js'),urlConfig=require('./f171257bbcaef547a3cf27266ccb0db2.js'),userActions=require('./9c906d27ca74e18d0deaaa231e71fdfa.js'),tools=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),loginHelper=require('./5bdce4f0657e887a1fda83e134c0b823.js'),loginManager=require('./89ba85d67a88f7636d657c22b5d3e038.js'),locales=require('./common/locales/index.js'),os="darwin"===process.platform?"darwin":"win",STATUS=C.LOGIN_QR_STATUS,TIME_CONFIG={REQ_ERR_RETRY_INTERVAL:500,SCANNED_TIMEOUT:500,CANCELLED_TIMEOUT:2e3,KEEP_ALIVE_TIMEOUT:2e3,RELOAD_TO_LONGPOLL_TIMEOUT:100,LONGPOLL_TIMEOUT:6e4},AUTO_REFRESH_MAX=3,REQ_ERR_MAX_RELOAD=10,LONGPOLL_URL_REGULAR_EXPRESSION=/"(https:\/\/long.open.weixin.qq.com\/connect\/l\/qrconnect\?uuid=.+?)"/,QR_CODE_RELATIVE_URL_REGULAR_EXPRESSION=/src="\/(connect\/qrcode\/.+)"/,report=require('./da7c31daaf542cf1796023d8e344b98a.js');let LoginQRCode=class extends React.Component{constructor(a){super(a),this.longPollURL="",this.reset=()=>{this.cancelRequest(),this.reloadErrCountdown=REQ_ERR_MAX_RELOAD,this.autoRefreshCountdown=AUTO_REFRESH_MAX,this.state.status===STATUS.OCCUPIED&&(global.CLI.pendingLogin=!1),this.reloadQRCode()},this.reloadQRCode=async()=>{if(global.CLI.pendingLogin)return void this.setOccupied();if(0>=this.autoRefreshCountdown)return void this.setState({status:STATUS.OUTDATED,errMsg:""});this.setState({status:STATUS.NOT_SCAN,errMsg:""});const a=await this.getLoginPageInfo();if(a){const{qrcode:b,longPollURL:c}=a;this.QRCodeImgElement&&(this.QRCodeImgElement.src=b),this.longPollURL=c,clearTimeout(this.longPollTimer),this.longPollTimer=setTimeout(this.longPoll,TIME_CONFIG.RELOAD_TO_LONGPOLL_TIMEOUT)}},this.longPoll=(a)=>{return global.CLI.pendingLogin?void this.setOccupied():void(this.pollingReq=request({url:`${this.longPollURL}${a?"&last="+a:""}&_=${+new Date}`,headers:{"Content-Type":"application/javascript"},timeout:TIME_CONFIG.LONGPOLL_TIMEOUT},async(a,b,c)=>{if(a)return void this.setState({status:STATUS.UNKNOWN,errMsg:a.toString()});const d=c.match(/wx_errcode\s*=\s*([0-9]*)\s*/);if(!d)return void this.setState({status:STATUS.UNKNOWN,errMsg:c});const e=parseInt(d[1]||"-1",10);switch(e){case C.LOGIN_WX_ERRR_CODE.SUCCESS:{let a=urlConfig.LOGIN_REDIRECT_URL;a=a.replace(/&amp;/g,"&");const b=c.match(/wx_code\s*=\s*'([\w]*)'\s*/);a+=(-1<a.indexOf("?")?"&":"?")+`code=${b&&b[1]}&state=${os}`,this.setState({status:STATUS.CONFIRM,errMsg:""});try{const b=await loginManager.requestLogin(a);this.props.onLoginSuccess(b)}catch(a){"string"==typeof a&&-1<a.indexOf("connect")?this.setState({status:STATUS.REDIRECT_NETWORK_ERROR,errMsg:""}):this.reloadQRCode()}break}case C.LOGIN_WX_ERRR_CODE.SCANNED:{this.setState({status:STATUS.SCAN,errMsg:""}),this.longPollTimer=setTimeout(this.longPoll,TIME_CONFIG.SCANNED_TIMEOUT,e);break}case C.LOGIN_WX_ERRR_CODE.CANCELLED:{this.setState({status:STATUS.CANCEL,errMsg:""}),this.longPollTimer=setTimeout(this.longPoll,TIME_CONFIG.CANCELLED_TIMEOUT,e);break}case C.LOGIN_WX_ERRR_CODE.KEEP_ALIVE:{this.longPollTimer=setTimeout(this.longPoll,TIME_CONFIG.KEEP_ALIVE_TIMEOUT);break}case C.LOGIN_WX_ERRR_CODE.TIMEOUT:{this.reloadQRCode();break}case C.LOGIN_WX_ERRR_CODE.ERROR:{this.reloadQRCode();break}default:{this.setState({status:STATUS.UNKNOWN,errMsg:e+""});break}}}))},this.autoRefreshCountdown=AUTO_REFRESH_MAX,this.reloadErrCountdown=REQ_ERR_MAX_RELOAD,this.state={status:STATUS.NOT_SCAN,errMsg:""}}componentDidMount(){this.reloadQRCode(),"noticecenter"===this.props.from?report("app_sub_login"):"mainlogin"===this.props.from&&report("app_main_login")}componentWillReceiveProps(a){a.user.loginStatus===C.LOGIN_STATUS.FAIL&&this.reloadQRCode()}componentDidUpdate(a,b){b.status!==this.state.status&&"function"==typeof this.props.setStatus&&this.props.setStatus(this.state.status)}componentWillUnmount(){this.cancelRequest()}cancelRequest(){if(this.pollingReq)try{this.pollingReq.abort()}catch(a){}clearTimeout(this.reloadQRCodeTimer),clearTimeout(this.longPollTimer)}async getLoginPageInfo(){try{const a=await loginHelper.getLoginPage();return await loginHelper.extractLoginInfo(a.body)}catch(a){if(log.error(`login fail with code ${a.code}\n${a.message}\n${a.stack} `),this.reloadErrCountdown--,0>=this.reloadErrCountdown||"ECONNRESET"===a.code||"ENOTFOUND"===a.code)return void this.setState({status:STATUS.NETWORK_ERROR,errMsg:a.toString()});clearTimeout(this.reloadQRCodeTimer),this.reloadQRCodeTimer=setTimeout(this.reloadQRCode,TIME_CONFIG.REQ_ERR_RETRY_INTERVAL)}}setOccupied(){this.QRCodeImgElement&&(this.QRCodeImgElement.src=""),this.setState({status:STATUS.OCCUPIED,errMsg:""})}render(){const a={},b={display:"none"},c=this.state.status,d=c===STATUS.SCAN||c===STATUS.CONFIRM,e=c===STATUS.OUTDATED,f=c===STATUS.NETWORK_ERROR||c===STATUS.REDIRECT_NETWORK_ERROR,g=c===STATUS.UNKNOWN,h=c===STATUS.OCCUPIED;return React.createElement("div",{className:"authenticate-qrcode",style:css.nodrag,onClick:this.reset},React.createElement("img",{ref:(a)=>this.QRCodeImgElement=a}),React.createElement("i",{className:"ui-icon-mini-app-circle"}),React.createElement("div",{className:"authenticate-result",style:d?a:b},React.createElement("i",{className:"ui-icon-tick-circle"}),React.createElement("h4",{className:"authenticate-result-title"},locales.config.LOGIN_QR_CODE_SUCCESS)),React.createElement("div",{className:"authenticate-result",style:e?a:b},React.createElement("a",null,React.createElement("i",{className:"ui-icon-reload"})),React.createElement("h4",{className:"authenticate-result-title authenticate-result-title-warn"},locales.config.LOGIN_QR_CODE_EXPIRED),React.createElement("p",{className:"authenticate-result-subtitle"},locales.config.LOGIN_QR_CODE_REFRESH)),React.createElement("div",{className:"authenticate-result",style:f?a:b},React.createElement("a",null,React.createElement("i",{className:"ui-icon-reload"})),React.createElement("h4",{className:"authenticate-result-title authenticate-result-title-warn"},locales.config.NETWORK_ERR),React.createElement("p",{className:"authenticate-result-subtitle"},locales.config.LOGIN_QR_CODE_NETWORK_SUBTITLE)),React.createElement("div",{className:"authenticate-result",style:g?a:b},React.createElement("a",null,React.createElement("i",{className:"ui-icon-reload"})),React.createElement("h4",{className:"authenticate-result-title authenticate-result-title-warn"},locales.config.UNKNOWN_ERR),this.state.errMsg?React.createElement("p",{className:"authenticate-result-subtitle"},this.state.errMsg):React.createElement("p",{className:"authenticate-result-subtitle"},locales.config.LOGIN_QR_CODE_NETWORK_SUBTITLE)),React.createElement("div",{className:"authenticate-result",style:h?a:b},React.createElement("a",null,React.createElement("i",{className:"ui-icon-reload"})),React.createElement("h4",{className:"authenticate-result-title authenticate-result-title-warn"}),React.createElement("p",{className:"authenticate-result-subtitle"},locales.config.LOGIN_QR_CODE_OCCUPIED_ERROR)))}};LoginQRCode=tslib_1.__decorate([locales.mixin],LoginQRCode);const mapStateToProps=(a)=>({user:a.user}),mapDispatchToProps=(a)=>({userActions:tools.bindActionCreators(userActions,a)});module.exports=connect(mapStateToProps,mapDispatchToProps,null,{withRef:!0})(LoginQRCode);
;}(require("lazyload"), require);
