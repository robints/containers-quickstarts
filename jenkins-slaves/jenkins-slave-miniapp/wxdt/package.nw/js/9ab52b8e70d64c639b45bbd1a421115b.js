;!function(require, directRequire){;'use strict';const actionsConfig=require('./0634ee2ebd3e560d9d4804ecc960160f.js'),store=require('./bc78839ccca8df9e5ceeb7fae11b7be2.js'),webviewMessager=require('./a15851ca252a104aad8b3fd3fc114574.js'),stateHelper=require('./54bd189bb6081afa877cfd37a0dbec56.js'),colorUtils=require('./5b7e808cbfe14a62c21959fb1771749d.js'),checkIfTabbarApiCouldInvoke=()=>{const a=store.getState();if(stateHelper.isCustomTabbar(a))return'custom Tabbar';const b=a.simulator.webviewInfos[a.simulator.currentWebviewID]||{};return-1===b.tabbarIndex?'not TabBar page':''};async function setNavigationBarTitle(a,b){return a({type:actionsConfig.SIMULATOR_SET_NAVIGATION_BAR,data:{title:b.args.title}}),{errMsg:`${b.api}:ok`}}async function setNavigationBarColor(a,b){const c=b.args,{frontColor:d,backgroundColor:e,alpha:f,animation:g}=c,h='#000000'===d?'black':'white';let i;if(g){const a=g.duration||0;let b=g.timingFunc||'linear';'easeIn'===b?b='ease-in':'easeOut'===b?b='ease-out':'easeInOut'===b&&(b='ease-in-out'),i=`all ${a}ms ${b}`}return a({type:actionsConfig.SIMULATOR_SET_NAVIGATION_BAR,data:{frontColor:d,backgroundColor:e,alpha:f,transition:i,titleStyle:h}}),{errMsg:`${b.api}:ok`}}async function showNavigationBarLoading(a,b){return a({type:actionsConfig.SIMULATOR_SET_NAVIGATION_BAR,data:{showLoading:!0}}),{errMsg:`${b.api}:ok`}}async function hideNavigationBarLoading(a,b){return a({type:actionsConfig.SIMULATOR_SET_NAVIGATION_BAR,data:{showLoading:!1}}),{errMsg:`${b.api}:ok`}}async function setNavigationBarRightButton(a,b){const{iconPath:c,text:d,hide:e}=b.args;return a({type:actionsConfig.SIMULATOR_SET_NAVIGATION_BAR,data:{showRightBtn:!e}}),{errMsg:`${b.api}:ok`}}async function stopPullDownRefresh(a,b){const c=store.getState(),d=c.simulator.currentWebviewID;return webviewMessager.send(d,{command:'STOP_PULLDOWN_REFRESH'}),{errMsg:`${b.api}:ok`}}async function startPullDownRefresh(a,b){const c=store.getState(),d=c.simulator.currentWebviewID;return webviewMessager.send(d,{command:'START_PULLDOWN_REFRESH'}),{errMsg:`${b.api}:ok`}}async function showTabBar(a,b){const c=checkIfTabbarApiCouldInvoke();return c?{errMsg:`${b.api}:fail ${c}`}:(a({type:actionsConfig.SIMULATOR_SET_TABBAR,data:b}),{errMsg:`${b.api}:ok`})}async function hideTabBar(a,b){const c=checkIfTabbarApiCouldInvoke();return c?{errMsg:`${b.api}:fail ${c}`}:(a({type:actionsConfig.SIMULATOR_SET_TABBAR,data:b}),{errMsg:`${b.api}:ok`})}async function setTabBarStyle(a,b){const c=checkIfTabbarApiCouldInvoke();if(c)return{errMsg:`${b.api}:fail ${c}`};const d=b.args,e=[];return(['color','selectedColor','backgroundColor'].forEach((a)=>{d[a]&&!colorUtils.isHexColor(d[a])&&e.push(`invalid ${a}`)}),0<c.length)?{errMsgs:`${b.api}:fail ${e.join(' ')}`}:d.borderStyle&&0>['white','black'].indexOf(d.borderStyle)?{errMsg:`${b.api}:fail invalid borderStyle`}:(a({type:actionsConfig.SIMULATOR_SET_TABBAR,data:b}),{errMsg:`${b.api}:ok`})}async function setTabBarItem(a,b){const c=checkIfTabbarApiCouldInvoke();if(c)return{errMsg:`${b.api}:fail ${c}`};const d=store.getState(),e=b.args,f=d.simulator.tabbar,g=f.list[e.index];return g?(a({type:actionsConfig.SIMULATOR_SET_TABBAR,data:b}),{errMsg:`${b.api}:ok`}):{errMsg:`${b.api}:fail tabbar item not found`}}async function setTabBarBadge(a,b){const c=checkIfTabbarApiCouldInvoke();if(c)return{errMsg:`${b.api}:fail ${c}`};const d=store.getState(),e=b.args,f=d.simulator.tabbar,g=f.list[e.index];return g?e.badgeColor&&!/^#[0-9A-Fa-f]{6}$/.test(e.badgeColor)?{errMsg:`${b.api}:fail invalid badgeColor`}:e.badgeValue&&4<e.badgeValue.length?{errMsg:`${b.api}:fail badgeValue should be less than 4`}:0>['redDot','none','text'].indexOf(e.type)?{errMsg:`${b.api}:fail invalid type`}:(a({type:actionsConfig.SIMULATOR_SET_TABBAR,data:b}),{errMsg:`${b.api}:ok`}):{errMsg:`${b.api}:fail tabbar item not found`}}async function setBackgroundColor(a,b,c){const{api:d,args:e}=b,f=c(),g=f.simulator.currentWebviewID,h=[];return(['backgroundColor','backgroundColorTop','backgroundColorBottom'].forEach((a)=>{e[a]&&!colorUtils.isHexColor(e[a])&&h.push(`invalid ${a}`)}),0<h.length)?{errMsg:`${d}:fail ${h.join(' ')}`}:(webviewMessager.send(g,{command:'SET_BACKGROUND_COLOR',data:e}),{errMsg:`${d}:ok`})}async function setBackgroundTextStyle(a,b,c){const{api:d,args:e}=b,f=c(),g=f.simulator.currentWebviewID;return 0>['dark','light'].indexOf(e.textStyle)?{errMsg:`${d}:fail invalid textStyle`}:(webviewMessager.send(g,{command:'SET_BACKGROUND_TEXT_STYLE',data:e}),{errMsg:`${d}:ok`})}async function getMenuButtonBoundingClientRect(a,b){const{api:c}=b,d=document.querySelector('.simulator');if(d){const a=d.getBoundingClientRect(),b=document.querySelector('.simulator .capsule').getBoundingClientRect();return{errMsg:`${c}:ok`,width:b.width,height:b.height,left:b.left-a.left,top:b.top-a.top,right:b.right-a.left,bottom:b.bottom-a.top}}return{errMsg:`${c}:ok`}}async function hideNavigationBar(a,b,c){const{api:d}=b,e=c(),f=stateHelper.isSimulatorFullScreen(e);return f||a({type:actionsConfig.SIMULATOR_HIDE_NAVIGATION,data:{navigationBarHeight:e.toolbar.deviceInfo.navigationbarHeight}}),{errMsg:`${d}:ok`}}async function showNavigationBar(a,b,c){const{api:d}=b,e=c(),f=stateHelper.isSimulatorFullScreen(e);return f||a({type:actionsConfig.SIMULATOR_SHOW_NAVIGATION,data:{navigationBarHeight:e.toolbar.deviceInfo.navigationbarHeight}}),{errMsg:`${d}:ok`}}async function hideStatusBar(a,b,c){const{api:d}=b,e=c(),f=stateHelper.isSimulatorFullScreen(e);return a({type:actionsConfig.SIMULATOR_HIDE_STATUSBAR,data:{statusBarHeight:f?0:e.toolbar.deviceInfo.statusbarHeight}}),{errMsg:`${d}:ok`}}async function showStatusBar(a,b,c){const{api:d}=b,e=c(),f=stateHelper.isSimulatorFullScreen(e);return a({type:actionsConfig.SIMULATOR_SHOW_STATUSBAR,data:{statusBarHeight:f?0:e.toolbar.deviceInfo.statusbarHeight}}),{errMsg:`${d}:ok`}}module.exports={setNavigationBarTitle,setNavigationBarColor,setNavigationBarRightButton,private_setNavigationBarRightButton:setNavigationBarRightButton,showNavigationBarLoading,hideNavigationBarLoading,startPullDownRefresh,stopPullDownRefresh,showTabBar,hideTabBar,setTabBarBadge,setTabBarItem,setTabBarStyle,setBackgroundColor,setBackgroundTextStyle,getMenuButtonBoundingClientRect,hideNavigationBar,showNavigationBar,hideStatusBar,showStatusBar};
;}(require("lazyload"), require);
