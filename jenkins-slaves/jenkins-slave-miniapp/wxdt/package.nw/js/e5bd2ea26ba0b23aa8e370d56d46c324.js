'use strict';var _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a};!function(require,directRequire){const a=require('fs'),b=require('path'),c=require('events').EventEmitter,d=require('react'),e=require('redux'),f=require('./4b3c32249e0fb6e8d60bd516d6975f06.js'),g=require('./e9e3fd38aeedddd6db73d1d015ff6952.js'),h=require('./9a24eb4fb7a49d4dd24531943fc3c899.js'),i=require('./a78e6d6a87de1708226375ca4c320d76.js'),j=require('./2a5e5cdfba5a7802665ffdcfcb8c054d.js'),k=require('./ba23d8b47b1f4ea08b9fd49939b9443f.js'),l=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),m=require('./d62fc37d7aa6416d5dcc240ba94175cd.js'),n=require('./f6cbcecf6ed9f533f6a506310d8f07b6.js'),o=require('./da7c31daaf542cf1796023d8e344b98a.js'),p=require('./92320c1386e6db6a6f2556736a9bc280.js'),q=require('./72653d4b93cdd7443296229431a7aa9a.js'),r=require('./56c390e04c10e91a4aa2a2c19d9a885d.js'),s=require('./344232cd2199c9c3a024b4005d054672.js'),{connect:t}=require('react-redux'),u=global.appConfig&&global.appConfig.isDev,v=new c;class w extends d.Component{constructor(a){super(a),this.enabled=!1,this._panelReady=!1,this._onRequestEvent=this.onRequestEvent.bind(this),this._sdkReqs={}}componentDidMount(){this._onMessage=this.onMessage.bind(this),f.devtools.register((a)=>{this._onMessage(a)}),f.appservice.register((a)=>{this._onMessage(a)}),this._onPluginMessage=this.onPluginMessage.bind(this),this.pluginMessager=g.get('audits_miniprogram'),this.pluginMessager.register(this._onPluginMessage)}componentWillUnmount(){f.devtools.unRegister(this._onMessage),f.appservice.unRegister(this._onMessage),this.pluginMessager.unRegister(this._onPluginMessage)}componentWillReceiveProps(a){if(this.enabled&&a.debugInfo!=this.props.debugInfo&&a.debugInfo){const b=this.convertDebuggerProtocolReqEventToChromeWebReqEvent(a.debugInfo);b&&this.pluginMessager.triggerOnEvent('ON_REQUEST_EVENT',{data:b})}this.props.project&&this.props.project.setting&&(this.props.project.setting.autoAudits&&(a.compileCommand!=this.props.compileCommand||a.device!=this.props.device)&&this.startAudits({startPanel:!0,startCompile:!1}),this.props.project.setting.autoAudits&&!a.project.setting.autoAudits&&this.stopAudits({stopPanel:!0}))}loadPanel({startAudits:a=!1}={}){if(h.send({command:'SHOW_PANNEL',data:{name:'Audits'}}),a){const a=+new Date;let b=!1;v.once('PANEL_READY',()=>{b||(b=!0,s.addFirstCompileOffset(+new Date-a),this.startAudits({startPanel:!0}))}),setTimeout(()=>{this._panelReady||(q.error('audits panel isn\'t ready after 2s, must procede to compile'),b=!0,s.addFirstCompileOffset(+new Date-a),this.props.compile({origin:r.COMPILE_ORIGIN.AUDITS}))},2e3)}}startAudits({startPanel:a=!1,startCompile:b=!0}={}){a&&this.pluginMessager.triggerOnEvent('START_AUDITS'),this.enabled=!0,i.on('all',this._onRequestEvent),this.inject(),b&&this.props.compile({origin:r.COMPILE_ORIGIN.AUDITS})}stopAudits({stopPanel:a=!1}={}){this.enabled=!1,i.removeListener('all',this._onRequestEvent),j.remove('appservice'),j.remove('webview'),a&&this.pluginMessager.triggerOnEvent('STOP_AUDITS')}inject(){const a=this.getAppserviceInjection(),b=this.getWebviewInjection();j.add({id:'appservice',html:`<script charset="UTF-8">${a}</script>`,conditions:{type:'appservice',position:'onDocumentStart'}}),j.add({id:'webview',html:`<script charset="UTF-8">${b}</script>`,conditions:{type:'simulator',position:'onDocumentStart'}})}priorityReadFile(b){for(const c of b)if(a.existsSync(c))return a.readFileSync(c,'utf8')}getAppserviceInjection(){if(global.appConfig.isDev)return a.readFileSync('./js/ideplugin/audits/inject/appservice.js','utf8');const c=this.priorityReadFile([b.join(p.WeappPlugin,'audits/inject/appservice.js'),b.join(__dirname,'./ideplugin/audits/inject/appservice.js')]);if(!c)throw new Error('file corrupted: cannot find appservice injection file for appservice');return c}getWebviewInjection(){if(global.appConfig.isDev)return a.readFileSync('./js/ideplugin/audits/inject/webview.js','utf8');const c=this.priorityReadFile([b.join(p.WeappPlugin,'audits/inject/webview.js'),b.join(__dirname,'./ideplugin/audits/inject/webview.js')]);if(!c)throw new Error('file corrupted: cannot find webview injection file for webview');return c}normalizePath(a){return a=a.replace(/\\/g,'/'),'/'===a[0]?a.substr(1):a}async getFileUtils(){return this.fileUtils||(this.fileUtils=await m(this.props.project.projectpath)),this.fileUtils}async getFiles(){function c(b){return new Promise((c,d)=>{a.lstat(b,(a,b)=>{a?d(a):c(b)})})}return new Promise(async(a)=>{const d=await this.getFileUtils(),e=d.getAllFileWithDir().map((a)=>'/'+a),f={},g=this.props.project.projectpath;for(const d of e)try{const a=await c(b.join(g,d));f[d]=_extends({},a,{isDir:a.isDirectory(),isFile:!a.isDirectory()})}catch(a){f[d]={}}a({files:e,info:f})})}async onMessage(a){try{a=JSON.parse(a)}catch(a){}const{command:b,data:c}=a;switch(b){case'TRANSFER':{f.appservice.send(a),f.devtools.send(a),this.pluginMessager.triggerOnEvent('TRANSFER',a);break}}}async onPluginMessage(a){try{a=JSON.parse(a)}catch(a){}let{command:b,data:c}=a;switch(b){case'TRANSFER':{f.appservice.send(a),f.devtools.send(a);break}case'FS_GET_FILES':{this.getFiles().then((a)=>{this.pluginMessager.triggerOnEvent('RESP_FS_GET_FILES',{data:{res:a}})}).catch((a)=>{this.pluginMessager.triggerOnEvent('RESP_FS_GET_FILES',{data:{err:a.toString()}})});break}case'FS_READ_FILE':{try{const a=await this.getFileUtils(),b=a.getFile(this.normalizePath(c.path));this.pluginMessager.triggerOnEvent('RESP_FS_READ_FILE',{data:{fileData:b,path:c.path}})}catch(a){this.pluginMessager.triggerOnEvent('RESP_FS_READ_FILE',{data:{err:a.toString()}})}break}case'FS_READ_TEMP_FILE':{try{const a=n.readFile(this.props.project,c.filePath,c.encoding);a.error?this.pluginMessager.triggerOnEvent('RESP_FS_READ_TEMP_FILE',{data:{err:a.reason}}):this.pluginMessager.triggerOnEvent('RESP_FS_READ_TEMP_FILE',{data:{filePath:c.filePath,encoding:c.encoding,fileData:a.fileData}})}catch(a){this.pluginMessager.triggerOnEvent('RESP_FS_READ_TEMP_FILE',{data:{err:a.toString()}})}break}case'START_EXPERIENCE_ANALYSIS':{this.startAudits({});break}case'STOP_EXPERIENCE_ANALYSIS':{this.stopAudits({});break}case'INJECT':{this.inject();break}case'PANEL_READY':{this._panelReady=!0,v.emit('PANEL_READY');break}case'REPORT':{o('audits_info_report',!0,a.data);break}}}onRequestEvent(a){this.pluginMessager.triggerOnEvent('ON_REQUEST_EVENT',{data:a})}convertDebuggerProtocolReqEventToChromeWebReqEvent(a){function b(a,b){try{return a()}catch(a){return b}}try{switch(a.method){case'Network.requestWillBeSent':{const c={frameId:0,method:b(()=>a.params.request.method.toUpperCase(),'GET'),parentFrameId:-1,requestId:b(()=>a.params.requestId,-1),tabId:-1,timeStamp:b(()=>a.params.timestamp,+new Date),type:'xmlhttprequest',url:b(()=>a.params.request.url,'')},d={eventName:'onBeforeRequest',type:'appservice',deviceInfo:{id:'appservice'},details:c};return this._sdkReqs[c.requestId]={onBeforeRequest:d},d}case'Network.responseReceived':{const c=b(()=>a.params.requestId,-1);if(this._sdkReqs[c]&&this._sdkReqs[c].onResponseStarted)return;const d=this._sdkReqs[c].onBeforeRequest,e=b(()=>a.params.response.status,200),f=b(()=>a.params.response.statusText,'OK'),g=`HTTP/1.1 ${e} ${f}`,h={eventName:'onResponseStarted',type:'appservice',deviceInfo:{id:'appservice'},details:{frameId:0,fromCache:!1,method:d.details.method,parentFrameId:-1,requestId:c,statusCode:e,statusLine:g,timeStamp:b(()=>a.params.timestamp,+new Date),tabId:-1,type:'xmlhttprequest',url:d.details.url}};return this._sdkReqs[c].onResponseStarted=h,h}case'Network.dataReceived':return;case'Network.loadingFinished':{const c=b(()=>a.params.requestId,-1),d=this._sdkReqs[c].onResponseStarted,e={eventName:'onCompleted',type:'appservice',deviceInfo:{id:'appservice'},details:{frameId:0,fromCache:!1,method:d.details.method,parentFrameId:-1,requestId:c,statusCode:d.details.statusCode,statusLine:d.details.statusLine,tabId:-1,timeStamp:b(()=>a.params.timestamp,+new Date),type:'xmlhttprequest',url:d.details.url}};return delete this._sdkReqs[c],e}case'Network.loadingFailed':{const c=b(()=>a.params.requestId,-1),d=this._sdkReqs[c].onBeforeRequest,e={eventName:'onErrorOccurred',type:'appservice',deviceInfo:{id:'appservice'},details:{error:b(()=>a.params.errorText,'unknown error'),frameId:0,fromCache:!1,method:d.details.method,parentFrameId:-1,requestId:c,tabId:-1,timeStamp:b(()=>a.params.timestamp,+new Date),type:'xmlhttprequest',url:d.details.url}};return delete this._sdkReqs[c],e}}}catch(a){console.warn(a)}}render(){return null}}module.exports=t((a)=>({debugInfo:a.simulator.debugInfo,project:a.project.current,compileCommand:a.simulator.compileCommand,device:a.toolbar.deviceInfo}),(a)=>({compile:l.bindActionCreators(k.compile,a)}),null,{withRef:!0})(w)}(require('lazyload'),require);