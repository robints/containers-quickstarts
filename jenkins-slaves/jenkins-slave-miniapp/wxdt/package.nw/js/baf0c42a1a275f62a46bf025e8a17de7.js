;!function(require, directRequire){;"use strict";const fs=require("fs"),path=require("path"),mkdir=require("mkdir-p"),contentWatcher=require('./162bf2ee28b76d3b3d95b685cede4146.js'),{bufToUTF8}=require('./efc820e1b92d6e4063535296d4a24213.js'),{FILE_NOT_UTF8}=require('./949d8235c744ced2a80121e4dba34c28.js'),needUTF8CHECK={".json":!0},{gameWhiteFileExtName}=require('./6242f55dbdfe53c2f07b7a51568311f2.js'),alreadyWrite={".js":!0};function compileOther(a,b){return new Promise(async(c,d)=>{const{distPath:e}=b,f=await contentWatcher(a),g=f.getAllFile();for(let a=0,b=g.length;a<b;a++){const b=g[a];if("app-config.json"===b)continue;const c=path.extname(b);if(!alreadyWrite[c]&&gameWhiteFileExtName[c]){const a=f.getFile(b,null);if(needUTF8CHECK[c]){const c=bufToUTF8(a);if(void 0===c){const a=new Error(b);return a.code=FILE_NOT_UTF8,d(a)}}const g=path.join(e,b),h=path.dirname(g);mkdir.sync(h),fs.writeFileSync(g,a)}}c()})}module.exports=compileOther;
;}(require("lazyload"), require);
