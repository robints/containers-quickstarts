;!function(require, directRequire){;"use strict";const tslib_1=require("tslib"),React=require("react"),classnames=require("classnames"),path=require("path"),locales=require('./common/locales/index.js'),ms=require('./ff946754202ecf377034d29daac7c8d9.js');let InfoBar=class extends React.Component{constructor(a){super(a),this.handleCopyClick=(a)=>{const b=a.currentTarget.dataset.type,c=nw.Clipboard.get();c.set(this.props[b].toString());const d=this.blinkObjects[b];d&&(d.style.opacity="0.5",!this._blinkTimeout&&(this._blinkTimeout=setTimeout(()=>{d.style.opacity="1",this._blinkTimeout=null},200))),this.props.showSuccessTip(locales.config.CONSOLE_COPY_SUCCESS)},this.state={currentPanel:0},this.blinkObjects={}}handlePathOpenClick(){ms.sendMessage("EDITOR",JSON.stringify({type:"COMMAND",command:"openFile",data:{path:("/"+path.posix.join(this.props.clientPath,(this.props.pathName||"")+".js")).replace(/\/+/g,"/")}}))}handlePanelLabelClick(a){this.setState({currentPanel:a})}render(){if(global.onlySimulator)return null;const a=this.props,b=this.state.currentPanel;return React.createElement("div",{className:"simulator-status-bar"},React.createElement("div",{className:classnames("ui-flex",{"ui-flex-item":0===b})},React.createElement("label",{htmlFor:"",onClick:this.handlePanelLabelClick.bind(this,0)},locales.config.PAGE_PATH),0===b?React.createElement("p",{ref:(a)=>this.blinkObjects.pathName=a,className:"ui-selectable",title:a.pathName},a.pathName?a.pathName:`(${locales.config.EMPTY})`):null,0===b&&a.pathName?React.createElement("a",{onClick:this.handleCopyClick,"data-type":"pathName"},locales.config.COPY):null,0===b&&a.pathName?React.createElement("a",{onClick:this.handlePathOpenClick.bind(this)},locales.config.OPEN):null),React.createElement("div",{className:classnames("ui-flex",{"ui-flex-item":1===b})},React.createElement("label",{htmlFor:"",onClick:this.handlePanelLabelClick.bind(this,1)},locales.config.SCENE_VALUE),1===b?React.createElement("p",{ref:(a)=>this.blinkObjects.scene=a,className:"ui-selectable"},a.scene?a.scene:`(${locales.config.EMPTY})`,a.scene?React.createElement("span",null," "+a.sceneMap[a.scene]||""):null):null),React.createElement("div",{className:classnames("ui-flex",{"ui-flex-item":2===b})},React.createElement("label",{htmlFor:"",onClick:this.handlePanelLabelClick.bind(this,2)},locales.config.PAGE_PARAMETERS),2===b?React.createElement("p",{ref:(a)=>this.blinkObjects.query=a,className:"ui-selectable"},a.query?a.query:`(${locales.config.EMPTY})`):null,2===b&&a.query?React.createElement("a",{onClick:this.handleCopyClick,"data-type":"query"},locales.config.COPY):null))}};InfoBar=tslib_1.__decorate([locales.mixin],InfoBar),module.exports=InfoBar;
;}(require("lazyload"), require);
