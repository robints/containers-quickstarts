;!function(require, directRequire){;'use strict';const path=require('path'),React=require('react'),{connect}=require('react-redux'),classNames=require('classnames'),Debugger=require('./0db6515f85d6f6210c2d50722041eb1f.js'),devtoolsMessager=require('./9a24eb4fb7a49d4dd24531943fc3c899.js'),simulatorActions=require('./ba23d8b47b1f4ea08b9fd49939b9443f.js'),highlightConfig=require('./ee4168d3d76e7e2f3fd66e4134821f90.js'),infoActions=require('./1fcc6bd55b687d154a4247e57fe3011d.js'),webviewMessager=require('./a15851ca252a104aad8b3fd3fc114574.js'),idepluginMessager=require('./e9e3fd38aeedddd6db73d1d015ff6952.js'),tools=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),mapStateToProps=(a)=>{const b=a.simulator.currentWebviewID,c=a.simulator.debuggeeMap,d=c[b];let e=d;const f=a.simulator.webviewInfos,g=f[b]||{},h=a.toolbar.deviceInfo||{},i={};if(!global.useChromeRemoteDebugProtocal){for(const a in f)f[a]&&(i[a]={targetId:a});e={targetId:b+''}}else for(const a in c){const b=c[a];b&&(i[b.targetId]=b)}return{device:{width:h.screenWidth,dpr:h.dpr},theme:a.settings.appearance.devtoolsTheme,project:a.project.current,ready:g.ready,wxmlInspected:a.simulator.wxmlInspected,debuggeeMap:i,wxmlDebuggee:e,currentWebviewID:b,debuggee:d,webviewInfos:f}},mapDispatchToProps=(a)=>({setWxmlInspect:tools.bindActionCreators(simulatorActions.setWxmlInspect,a),openEditorFile:tools.bindActionCreators(infoActions.openEditorFile,a)});class WXML extends React.Component{constructor(a){super(a),this.onMessage=(a)=>{const{command:b,data:c,callbackID:d}=a;return'GET_CURRENT_DEBUGGEE'===b?(this.wxmlMessager.ready=!0,void setTimeout(()=>{this.changeDebuggee()})):'SEND_COMMAND'===b?void(global.useChromeRemoteDebugProtocal?Debugger.sendCommand(c.debuggee,c.method,c.commandParams,(a)=>{this.wxmlMessager.callback(d,a)}):webviewMessager.triggerOnEvent({webviewID:c.debuggee.targetId,eventName:'remoteDebugCommand',data:{method:c.method,commandParams:c.commandParams,callbackID:d}})):'OPEN_FILE'===b?void this.openEditorFile(c):'ON_PANEL_HIDE'===b?void 0:'HIDE_INSPECT_MODE'===b?void(this.props.wxmlInspected?this.props.setWxmlInspect(!1):this.hideInspectMode()):void 0},this.inspectorWxml=()=>{this.props.debuggee&&(!this.props.wxmlInspected&&devtoolsMessager.send({command:'SHOW_PANNEL',data:{name:'Wxml'}}),this.props.setWxmlInspect(!this.props.wxmlInspected))},this.wxmlMessager=idepluginMessager.get('wxml_miniprogram'),this.wxmlMessager.ready=!1}componentDidMount(){this.wxmlMessager.register(this.onMessage)}componentWillUnmount(){this.wxmlMessager.unRegister(this.onMessage)}componentWillReceiveProps(a){(a.debuggee!==this.props.debuggee&&a.debuggee||a.ready!==this.props.ready&&a.ready)&&setTimeout(()=>{this.changeDebuggee()}),a.wxmlInspected!==this.props.wxmlInspected&&setTimeout(()=>{this.inspectModeChange()})}changeDebuggee(){if(this.props.wxmlDebuggee&&this.props.ready){const a=this.props;this.wxmlMessager.triggerOnEvent('CHANGE_DEBUGGEE',{debuggee:a.wxmlDebuggee,debuggeeMap:a.debuggeeMap,device:a.device}),this.props.wxmlInspected&&this.inspectModeChange()}}async openEditorFile(a){const b=this.props.project,c=b.miniprogramRoot?path.posix.join(b.projectpath,b.miniprogramRoot):b.projectpath,d=path.posix.relative(b.projectpath,path.posix.join(c,a.file));this.props.openEditorFile({file:`/${d}`,line:parseInt(a.line,10)})}hideInspectMode(){if(global.useChromeRemoteDebugProtocal){const a=this.props.debuggee;if(!a)return;Debugger.sendCommand(a,'DOM.hideHighlight',{},()=>{}),Debugger.sendCommand(a,'Overlay.setInspectMode',{mode:'none'},()=>{})}webviewMessager.triggerOnEvent({webviewID:this.props.currentWebviewID,eventName:'remoteDebugCommand',data:{method:'DOM.hideHighlight',commandParams:{}}}),webviewMessager.triggerOnEvent({webviewID:this.props.currentWebviewID,eventName:'remoteDebugCommand',data:{method:'Overlay.setInspectMode',commandParams:{mode:'none'}}})}inspectModeChange(){const a=this.props.debuggee;a&&(this.props.wxmlInspected?global.useChromeRemoteDebugProtocal?Debugger.sendCommand(a,'Overlay.setInspectMode',{mode:'searchForNode',highlightConfig},()=>{}):webviewMessager.triggerOnEvent({webviewID:this.props.currentWebviewID,eventName:'remoteDebugCommand',data:{method:'Overlay.setInspectMode',commandParams:{mode:'searchForNode',highlightConfig}}}):this.hideInspectMode(),this.wxmlMessager.triggerOnEvent('SET_INSPECT_MODE',this.props.wxmlInspected))}render(){return React.createElement('div',{style:{position:'absolute',width:33,height:26,zIndex:2,background:'dark'===this.props.theme?'#292929':'#F3F3F3'}},React.createElement('div',{className:'devtools-inspector-bg'}),React.createElement('i',{style:{position:'relative',left:'10px',top:'3px',background:this.props.wxmlInspected?'#3e82f7':''},className:classNames('ui-icon-inspect',{active:this.props.wxmlInspected}),onClick:this.inspectorWxml}))}}module.exports=connect(mapStateToProps,mapDispatchToProps)(WXML);
;}(require("lazyload"), require);
