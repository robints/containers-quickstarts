;!function(require, directRequire){;'use strict';const fs=require('fs'),path=require('path'),urlConfig=require('./f171257bbcaef547a3cf27266ccb0db2.js'),dirConfig=require('./92320c1386e6db6a6f2556736a9bc280.js'),A=require('./0634ee2ebd3e560d9d4804ecc960160f.js'),request=require('./15ba1827c7f6564a45df6bd44da3a977.js'),unpack=require('./29552ee79b3c130ddd9b6e8c13c40be9.js'),pack=require('./e5fa35c3c8e81bc6466b4b8eb436113b.js'),tools=require('./84b183688a46c9e2626d3e6f83365e13.js'),ProgressRecorder=require('./664c85134de31b9a04ff1f03a1492daf.js'),progressRecorder=ProgressRecorder.get(),getServerScript=(a)=>{return async()=>{const b=`getServerScript-${Date.now()}`,{name:c,type:d,writeFile:e,distPath:f}=a;try{progressRecorder.add({id:b,name:'\u4E0B\u8F7D\u5E76\u8986\u76D6\u6210\u529F',type:'getServerScript',progressIndeterminate:!0,status:'pending'});const{body:a}=await request({url:urlConfig.getServerScript,method:'POST',encoding:null,body:JSON.stringify({script_name:c||'',type:d}),needToken:1,needAppID:1,needParse:-1}),g=await unpack(a);if(e)for(const a in g){const b=path.join(f,a);fs.writeFileSync(b,g[a])}progressRecorder.markSuccess(b)}catch(a){progressRecorder.updateDetails(b,a.toString()),progressRecorder.markFail(b,{buttonsTemplate:ProgressRecorder.TEMPLATE.PROGRESS_DIALOG})}}},uploadServerScript=(a)=>{return async()=>{const b=`uploadServerScript-${Date.now()}`,c=a.path,d=path.join(dirConfig.Weappdest,`${Date.now()}.wx`);try{progressRecorder.add({id:b,name:'\u4E0A\u4F20\u6587\u4EF6\u5230\u5F00\u53D1\u73AF\u5883',type:'uploadServerScript',progressIndeterminate:!0,status:'pending'});const a=fs.statSync(c);let e={};if(!a.isDirectory()){const a=path.join(dirConfig.Weappdest,tools.random());tools.rmSync(a),tools.cpSync(c,path.join(a,path.basename(c))),e=await pack(a,d)}else e=await pack(c,d);await request({url:urlConfig.uploadServerScript,method:'post',body:e.data,needToken:1,needAppID:1}),progressRecorder.markSuccess(b)}catch(a){progressRecorder.updateDetails(b,a.toString()),progressRecorder.markFail(b,{buttonsTemplate:ProgressRecorder.TEMPLATE.PROGRESS_DIALOG})}fs.unlinkSync(d)}},checkServerScript=()=>{return async()=>{}},getServerScriptLog=(a)=>{return async()=>{const{body:a}=await request({url:urlConfig.getServerScriptLog,method:'post',needToken:1,needAppID:1,body:JSON.stringify({script_name:name,start_time:startTime,end_time:endTime,limit})});console.log(a)}},uploadResources=(a)=>{return async()=>{const b=`uploadResources-${Date.now()}`,c=a.path,d=path.join(dirConfig.Weappdest,`${+new Date}.wx`);try{progressRecorder.add({id:b,name:'\u4E0A\u4F20\u8D44\u6E90\u6587\u4EF6\u5230\u5F00\u53D1\u73AF\u5883',type:'uploadResources',progressIndeterminate:!0,status:'pending'});const a=await request({url:urlConfig.getServerResourcesInfo,method:'post',needToken:1,needAppID:1}),e={};a.body.list&&a.body.list.forEach((a)=>{e[a.path]=a.md5});const f=await pack(c,d,{needMd5:!0,ignoreFileMd5:e});await request({url:urlConfig.uploadServerResources,method:'post',body:f.data,needToken:1,needAppID:1}),progressRecorder.markSuccess(b)}catch(a){progressRecorder.updateDetails(b,a.toString()),progressRecorder.markFail(b,{buttonsTemplate:ProgressRecorder.TEMPLATE.PROGRESS_DIALOG})}fs.unlinkSync(d)}},downloadResources=(a)=>{return async()=>{const b=`downloadResources-${Date.now()}`,{type:c,writeFile:d,distPath:e}=a;try{progressRecorder.add({id:b,name:'\u4E0B\u8F7D\u8D44\u6E90\u6587\u4EF6',type:'downloadResources',progressIndeterminate:!0,status:'pending'});const{body:a}=await request({url:urlConfig.downloadServerResources,method:'POST',encoding:null,body:JSON.stringify({type:c}),needToken:1,needAppID:1,needParse:-1}),f=await unpack(a);if(d)for(const a in f){const b=path.join(e,a);fs.writeFileSync(b,f[a])}progressRecorder.markSuccess(b)}catch(a){progressRecorder.updateDetails(b,a.toString()),progressRecorder.markFail(b,{buttonsTemplate:ProgressRecorder.TEMPLATE.PROGRESS_DIALOG})}}};module.exports={getServerScript,uploadServerScript,checkServerScript,getServerScriptLog,uploadResources,downloadResources};
;}(require("lazyload"), require);
