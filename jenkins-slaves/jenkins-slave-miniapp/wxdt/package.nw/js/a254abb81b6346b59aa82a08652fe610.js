;!function(require, directRequire){;"use strict";const React=require("react"),{connect}=require("react-redux"),PropTypes=require("prop-types"),classNames=require("classnames"),tools=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),Resizable=require('./ea653f45dc25181ca4f1b108175009b7.js'),windowActions=require('./a8c87029da0fa06e986298d447ab0fe2.js'),simulatorActions=require('./ba23d8b47b1f4ea08b9fd49939b9443f.js'),Toolbar=require('./1ca0b7713664710bff99ca9c6d29c43c.js'),Webview=require('./071409e377770b723074b0f04fd4a50c.js'),BackMode=require('./137588fc97010af6b33c2be1d533447b.js'),StatusBar=require('./50adb3111cbfde1bf7b612cfcb0d1a49.js'),SimulatorPage=require('./514a851d54b7c3c137c5121a2a8a1174.js'),SimulatorComponent=require('./42821d634e3cc6335ce2160046e31ec3.js'),RightBtn=require('./8b753033006e4d2e96ea5f3bc1d3433a.js'),RightBtnActionSheet=require('./7af1f62bca29efc6a5378890b665dee8.js'),CoverView=require('./840e56f8d48eb77cb843e8c459b3ccc1.js'),IPhoneXHead=require('./245e991bfa34036d0454bd1d61b4a3b2.js'),isMac="darwin"===process.platform,mapStateToProps=(a)=>{const b=a.window.simulator||{},c=a.toolbar.deviceInfo,d=a.project.current,e=d.compileType,f=a.simulator.orientation&&/^landscape(Left|Right)?$/.test(a.simulator.orientation.value),g=a.simulator.appConfig&&a.simulator.appConfig.showStatusBar;return{showStatusBar:!f&&g,show:b.show,isPopup:b.popup,position:b.position,screenWidth:f?c.screenHeight:c.screenWidth,screenHeight:f?c.screenWidth:c.screenHeight,deviceScale:a.toolbar.deviceScale,appLaunched:a.simulator.appLaunched}},mapDispatchToProps=(a)=>({windowActions:tools.bindActionCreators(windowActions,a),simulatorActions:tools.bindActionCreators(simulatorActions,a)});class Simulator extends React.Component{componentDidMount(){chrome.fontSettings.setMinimumFontSize({pixelSize:1}),this.props.isPopup?this.adjustWindowSize():this.props.appLaunched&&this.props.simulatorActions.compile(),this.adjustWindowSize()}componentWillReceiveProps(a){this.props.isPopup&&(a.screenWidth!==this.props.screenWidth||a.screenHeight!==this.props.screenHeight)&&this.adjustWindowSize()}onResizeStop(a,b){this.props.windowActions.setSimulator({width:b})}adjustWindowSize(){setTimeout(()=>{const a=this.props.win;if(a){let b=this.props.screenWidth;isMac||(b-=10),a.width=b;let c=this.props.screenHeight;const d=document.getElementsByClassName("simulator-toolbar");c+=d[0]?d[0].offsetHeight:27,isMac||(c-=10),a.height=c}})}getChildContext(){return{isPopup:this.props.isPopup,window:this.props.win?this.props.win:null}}getSimulatorInner(a){const b=this.props;return React.createElement("div",{className:"simulator-shell"},React.createElement("div",{className:"simulator",style:a},b.showStatusBar?React.createElement(StatusBar,null):null,React.createElement(IPhoneXHead,null),React.createElement(RightBtn,null),React.createElement(Webview,null),React.createElement(RightBtnActionSheet,null),React.createElement(CoverView,null),React.createElement(SimulatorComponent,null)),React.createElement(SimulatorPage,null))}render(){const a=this.props;let b;return global.onlySimulator?(b={top:0,left:0,width:a.screenWidth,height:a.screenHeight,transform:`scale(${a.deviceScale})`,transformOrigin:"50% 0"},global.Win.width!==b.width&&(global.Win.width=b.width),global.Win.height!==b.height&&(global.Win.height=b.height+("darwin"===process.platform?0:26))):b={width:a.screenWidth,height:a.screenHeight,transform:`translate3d(-50%,0,0) scale(${a.deviceScale})`,transformOrigin:"50% 0"},a.isPopup?(b.top="0",b.left="unset",b.transform="inherit",b.transformOrigin="inherit",React.createElement("div",{style:{width:"100%",height:"100%"},className:classNames("simulator-container",{"ui-invisible":!1})},React.createElement(Toolbar,null),this.getSimulatorInner(b),React.createElement(BackMode,null))):React.createElement(Resizable,{width:a.width,height:"100%",className:classNames("simulator-container",{"ui-invisible":!a.show}),style:{minWidth:global.onlySimulator?a.screenWidth*a.deviceScale:(a.screenWidth+100)*a.deviceScale},leftResizable:"right"===a.position,rightResizable:"left"===a.position,onResizeStop:this.onResizeStop.bind(this)},React.createElement(Toolbar,null),this.getSimulatorInner(b),React.createElement(BackMode,null),React.createElement("div",{className:"ui-divider-vertical",style:{pointerEvents:"none"}}))}}Simulator.childContextTypes={isPopup:PropTypes.bool,window:PropTypes.object},module.exports=connect(mapStateToProps,mapDispatchToProps)(Simulator);
;}(require("lazyload"), require);
