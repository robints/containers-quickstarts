;!function(require, directRequire){;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const fs=require("fs"),path=require("path"),request=require('./15ba1827c7f6564a45df6bd44da3a977.js'),stringUtils=require('./2254692212b7d32a3c1405f399460682.js'),urlConfig=require('./f171257bbcaef547a3cf27266ccb0db2.js'),dirConfig=require('./92320c1386e6db6a6f2556736a9bc280.js'),locales=require('./common/locales/index.js'),libpack=require('./da189bc919cfd050066ec695411cbcf5.js'),STATUS={FILL_FORM:1,PENDING:2,SUCCESS:3,ERROR:4};exports.getMiniCodeInfo=async(a)=>{const b=stringUtils.getMiniCodeID(a);if(!b)throw new Error("invalid link which contains no valid minicode ID");const{body:c}=await request({url:`${urlConfig.getMiniCodeInfoURL}&codeid=${encodeURIComponent(b)}`,needToken:1});if(!c.code_pack||0===c.code_pack.length)throw{importStatus:STATUS.ERROR,errorLoc:"miniCodeLink",errorMsg:locales.config.LINK_ID_NOT_EXIST};const{body:d}=await request({url:`${urlConfig.getMiniCodeURL}&codeid=${b}`,encoding:null,needToken:1,needParse:-1}),e={miniCodeID:b,code:d,projectName:decodeURIComponent(c.code_pack[0].project_name),projectDesc:c.code_pack[0].project_desc,needAppID:c.code_pack[0].need_appid,minLibVersion:c.code_pack[0].min_libver,compressType:c.code_pack[0].compress_type};try{try{const a=path.join(dirConfig.Weappdest,`${+new Date}-minicode`);fs.writeFileSync(a,d,{encoding:null}),e.codePackTmpPath=a}catch(a){throw{importStatus:STATUS.ERROR,errorLoc:"miniCodeLink",errorMsg:locales.config.CODE_PACKAGE_CORRUPTED}}e.codePackTmpPath&&(e.projectConfigJSON=JSON.parse((await libpack.asarExtractFile(e.codePackTmpPath,"project.config.json")).toString()||"{}"),"game"===e.projectConfigJSON.compileType&&(e.isGame=!0),e.projectConfigJSON.isGameTourist&&(e.isGameTourist=!0))}catch(a){}return e};
;}(require("lazyload"), require);
