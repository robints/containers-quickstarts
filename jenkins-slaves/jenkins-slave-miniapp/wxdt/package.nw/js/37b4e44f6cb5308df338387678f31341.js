;!function(require, directRequire){;"use strict";const React=require("react"),{connect}=require("react-redux"),PropTypes=require("prop-types"),ToolbarItem=require('./aa9fff323e28f4dcd42f368a90ea14e6.js'),toolbarActions=require('./fc137838572a83604db39acff8e909e0.js'),clickKeyConfig=require('./eadce02c750c875a10680bcfedadec88.js'),tools=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),C=require('./56c390e04c10e91a4aa2a2c19d9a885d.js'),DropDown=require('./3c55dff3626a3ee184d599f076158345.js'),LayerDropdown=require('./41cc7eb0a353a977c089797ea79a43c6.js'),NetworkDropdown=require('./adf91eab0ec6d374e49bef9d1646b617.js'),DeviceScaleDropdown=require('./7c2dbbb98877b7bbfb1d9a8ea6b5c77c.js'),DeviceDropdown=require('./97bb45d1f540ee20771bd8470a70e195.js'),mapStateToProps=(a)=>{const b=a.toolbar.device,c=(b.list[b.current]||b.list[0]).name,d=a.toolbar.network,e=C.NETWORK_STATUS_DISPLAY[d.list[d.current]];return{show:a.toolbar.clickKey===clickKeyConfig.COMPACT,list:[c,e],top:27,left:219,width:120}},mapDispatchToProps=(a)=>{return{onShowClick:tools.bindActionCreators(toolbarActions.toggleCompactToolbar,a)}};class CompactToolbarItem extends React.Component{constructor(a){super(a),this.onMouseEnter=(a,b)=>{if(this.state.dropdownStatus[a]){const c=b.currentTarget.getBoundingClientRect(),d=this.getDropdownStatusTemplate();d[a]={show:!0,left:c.left+c.width,top:c.top},this.setState({dropdownStatus:d})}},this.onMouseLeave=(a)=>{this.state.dropdownStatus[a]&&this.setState({dropdownStatus:this.getDropdownStatusTemplate()})},this.state={dropdownStatus:this.getDropdownStatusTemplate(),showTs:0}}getDropdownStatusTemplate(){return[{show:!1,left:0,top:0,width:120},{show:!1,left:0,top:0,width:120}]}onShowClick(){this.setState({showTs:Date.now()})}render(){const a=this.props.list.join(", "),b={list:this.props.list,onMouseEnter:this.onMouseEnter,onMouseLeave:this.onMouseLeave},c=[];return this.state.dropdownStatus[0].show?c[0]={class:DeviceDropdown,props:{show:!0,left:this.state.dropdownStatus[0].left,top:this.state.dropdownStatus[0].top,width:this.state.dropdownStatus[0].width}}:this.state.dropdownStatus[1].show&&(c[1]={class:NetworkDropdown,props:{show:!0,left:this.state.dropdownStatus[1].left,top:this.state.dropdownStatus[1].top,width:this.state.dropdownStatus[1].width}}),b.subDropdowns=c,React.createElement(ToolbarItem,{show:this.props.show,currentWording:a,onShowClick:this.onShowClick.bind(this),dropdown:LayerDropdown,dropdownProps:b,dropdownType:"device+network",showTs:this.state.showTs,context:this.context})}}CompactToolbarItem.contextTypes={isPopup:PropTypes.bool,window:PropTypes.object},module.exports=connect(mapStateToProps,mapDispatchToProps)(CompactToolbarItem);
;}(require("lazyload"), require);
