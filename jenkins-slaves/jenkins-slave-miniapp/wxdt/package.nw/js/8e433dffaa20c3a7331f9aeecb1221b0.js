;!function(require, directRequire){;"use strict";const tslib_1=require("tslib"),React=require("react"),{connect}=require("react-redux"),constants=require('./56c390e04c10e91a4aa2a2c19d9a885d.js'),userActions=require('./9c906d27ca74e18d0deaaa231e71fdfa.js'),settingsActions=require('./e98c60a262d8d98e69e574a9d12a21df.js'),projectActions=require('./cc2c2970ff81ae4a83123e81ee123da2.js'),windowActions=require('./a8c87029da0fa06e986298d447ab0fe2.js'),Login=require('./021e193565a294d7eb2d08daddd97cc4.js'),Setting=require('./11cb73adc87121c47550697aa2c8d2e4.js'),Entrance=require('./0deb78a56cbcc9f9f3b0823d28892e90.js'),Main=require('./2c0e34a9e23574aea227f3448a526c52.js'),WebDebugger=require('./dadaae924a58746545d3b2199ba0c470.js'),IndependentPopupWindow=require('./eb1fe4da47d7ed10884f8b039b058c5b.js'),ConfirmPopup=require('./7951ae92c68d4898c7ba427e64125f9e.js'),notify=require('./d3ce001ab1e75959382f6a7e0156dd17.js'),topTools=require('./84b183688a46c9e2626d3e6f83365e13.js'),tools=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),proxy=require('./437e6043fc662374e4f1c2330516ac40.js'),loadConfig=require('./dc59f57d54946e61d27c95ab24d8cb4f.js'),serverWindowSync=require('./b543ae2da406cea63b3ad8951f17b6c0.js'),openEventHandler=require('./d7f7f9395e2df8d4130ef8626928c295.js'),log=require('./72653d4b93cdd7443296229431a7aa9a.js'),ls=require('./84858de8a097c9cf84ff2c2e3d86e2a9.js'),vendorManager=require('./d28a711224425b00101635efe1034c99.js'),syncMessage=require('./2a36cc34e5f44e62f9188b9fc0871d70.js'),syncBBSConfig=require('./25ebb8a2b123fbc321097e9005ca6c7e.js'),report=require('./da7c31daaf542cf1796023d8e344b98a.js'),isMac="darwin"===process.platform,locales=require('./common/locales/index.js'),stringUtils=require('./2254692212b7d32a3c1405f399460682.js'),cliServer=require('./d78f3e12fd18e9a066714df1b7cf9fa4.js'),{getAvailablePort}=require('./84b183688a46c9e2626d3e6f83365e13.js');nw.App.on("reopen",()=>{return global.isDevWindow?void global.Win.show():void(0===serverWindowSync.clientWindows.size&&global.Win.show(),global.CLI.startedByCLI&&(global.Win.showFunction&&(global.Win.show=global.Win.showFunction,global.CLI.showFunction=null),0===serverWindowSync.clientWindows.size&&global.Win.show()))}),nw.App.on("open",(a)=>{a?isMac?stringUtils.isMiniCodeLinkValid(a)?(log.info("open arg: ",a),openEventHandler.handleOpenArgs(a)):global.Win.show():stringUtils.containsMiniCodeLink(a)?(log.info("open arg: ",a),openEventHandler.handleOpenArgs(a)):global.Win.show():global.Win.show()});const mapStateToProps=(a)=>{let b=!1;if(a.user){const c=a.user;if(c){const a=+new Date;a<=c.signatureExpiredTime&&(b=!0)}}const c=a.window.mainWindow||constants.MAIN_WINDOW_TYPE.LOGIN;return{hasLogin:b,rehydrated:a.rehydrated,currentProject:a.project.current,showSettings:a.settings.show,proxyType:a.settings.proxy.proxyType||"SYSTEM",confirmPopups:a.info.confirmPopups,mainWindow:c,projectList:a.project.list,theme:a.settings.appearance.theme||"white",enableServicePort:a.settings.security.enableServicePort}},mapDispatchToProps=(a)=>({removeUserInfo:tools.bindActionCreators(userActions.removeUserInfo,a),closeIDESettings:tools.bindActionCreators(settingsActions.closeIDESettings,a),setProxySetting:tools.bindActionCreators(settingsActions.setProxySetting,a),closeProject:tools.bindActionCreators(projectActions.closeProject,a),setMainWindow:tools.bindActionCreators(windowActions.setMainWindow,a),openProject:tools.bindActionCreators(projectActions.openProject,a),setSecuritySetting:tools.bindActionCreators(settingsActions.setSecuritySetting,a),openIDESettings:tools.bindActionCreators(settingsActions.openIDESettings,a),addNotices:tools.bindActionCreators(windowActions.addNotices,a),setEntrance:tools.bindActionCreators(windowActions.setEntrance,a)});React.Component.prototype.componentDidCatch=function(a){const b=a.name,c=a.stack;log.error(`name:${b} stack: ${c}`),report("tool_error_web",`name:${b} stack: ${c}`)};let Root=class extends React.Component{constructor(a){super(a),this.onConfigUpdate=(a)=>{vendorManager.updateVendorConfig(a)},this.startCli=async()=>{try{const a=await getAvailablePort();global.cliPort=a;const b=await cliServer.start(a,global.CLI.cliRemotePort);this.setState({httpServer:b}),global.isDevWindow||this.props.setSecuritySetting({port:a})}catch(a){log.error(`start cli server error: ${a}`)}},this.closeCli=async()=>{const a=this.state.httpServer;if(a){try{await cliServer.close(a)}catch(a){log.error(`close cli server error: ${a}`)}delete global.cliPort,global.isDevWindow||this.props.setSecuritySetting({port:null}),this.setState({httpServer:null})}},this.toggleServicePort=async(a)=>{a?(this.state.httpServer&&(await this.closeCli()),this.startCli()):this.closeCli()},this.showServicePortTips=()=>{const a={confirm:{title:locales.config.SETTING_SECURITY_SETTINGS,callback:()=>this.props.openIDESettings("security")},cancel:{title:locales.config.SETTING_SECURITY_CANCEL,callback:()=>{}}};this.props.addNotices([{id:`servicePortTips-${+new Date}`,name:locales.config.SETTING_SECURITY_SERVICE_PORT_ON_DESC,time:+new Date,icon:"success",type:"servicePort",combinable:!0,buttons:a}])},this.state={httpServer:null}}componentWillMount(){try{const a=global.contentDocument.getElementById("fakeBackground");a&&(a.style.opacity="0",a.remove())}catch(a){}}componentDidMount(){this.setTheme(),this.checkWindowStatus(this.props),this.updateProxy(this.props.proxyType),this.toggleServicePort(this.props.enableServicePort),this.props.enableServicePort&&global.isDevWindow&&this.showServicePortTips(),loadConfig.on("CONFIG_UPDATE",this.onConfigUpdate);let a=!1;try{nw.App.argv&&0<nw.App.argv.length&&nw.App.argv.forEach((b)=>{a=!0,log.info("init open arg: ",b),openEventHandler.handleOpenArgs(b)})}catch(a){}if(!global.isDevWindow&&!a){const a=ls.lastSelect;a&&(this.props.projectList&&this.props.projectList[a]?this.props.openProject(a):a===constants.MAIN_WINDOW_TYPE.WEB_DEBUGGER&&IndependentPopupWindow.openWebDebugger())}try{}catch(a){}syncMessage.startSync(),syncBBSConfig.startSync()}componentWillUnmount(){loadConfig.off("CONFIG_UPDATE",this.onConfigUpdate),syncMessage.stopSync(),syncBBSConfig.stopSync()}componentDidUpdate(){this.checkWindowStatus(this.props),this.props.mainWindow===constants.MAIN_WINDOW_TYPE.LOGIN&&this.props.hasLogin&&this.props.setMainWindow(constants.MAIN_WINDOW_TYPE.ENTRANCE)}componentWillReceiveProps(a){this.props.mainWindow!==a.mainWindow&&(this.checkWindowStatus(a),!a.hasLogin&&(this.props.mainWindow!==constants.MAIN_WINDOW_TYPE.LOGIN||this.props.mainWindow!==constants.MAIN_WINDOW_TYPE.DEV||this.props.mainWindow!==constants.MAIN_WINDOW_TYPE.WEB_DEBUGGER)&&this.props.setMainWindow(constants.MAIN_WINDOW_TYPE.LOGIN)),a.proxyType!==this.props.proxyType&&this.updateProxy(a.proxyType),a.theme!==this.props.theme&&setTimeout(()=>{this.setTheme()}),a.enableServicePort!==this.props.enableServicePort&&this.toggleServicePort(a.enableServicePort)}setTheme(){clearTimeout(this.setThemeTimer),this.setThemeTimer=setTimeout(()=>{const{theme:a}=this.props,b=[document.body,global.contentDocument.body];b.forEach((b)=>{const c=b.classList.contains("dark");"dark"!==a||c||b.classList.add("dark"),"white"===a&&c&&b.classList.remove("dark")})})}checkWindowStatus(a){const b=constants.MAIN_WINDOW_TYPE;switch(a.mainWindow){case b.LOGIN:case b.ENTRANCE:{0===serverWindowSync.clientWindows.size&&"visible"!==global.Win.window.document.visibilityState&&global.Win.show(),a.mainWindow===b.LOGIN&&global.Win.width!==constants.SIZE.LOGIN.WIDTH&&this.resize(constants.SIZE.LOGIN.WIDTH,constants.SIZE.LOGIN.HEIGHT),a.mainWindow===b.ENTRANCE&&global.Win.width!==constants.SIZE.ENTRANCE.WIDTH&&this.resize(constants.SIZE.ENTRANCE.WIDTH,constants.SIZE.ENTRANCE.HEIGHT);break}case b.SELECT_PROJECT:case b.CREATE_PROJECT:case b.CREATE_MINICODE:case b.IMPORT_MINICODE:{this.props.setMainWindow(constants.MAIN_WINDOW_TYPE.ENTRANCE);break}case b.DEV:break;case b.WEB_DEBUGGER:}}resize(a,b){try{const c=this.props.win?this.props.win:global.Win;c.setResizable(!0),c.resizeTo(a,b),c.setResizable(!1)}catch(a){}}async updateProxy(a){try{await proxy.updateProxy(a),loadConfig.loop()}catch(b){log.error(`proxy updateProxy ${a} catch error ${b} try to set DIRECT instead`),global.isDevWindow||notify({priority:1,title:locales.config.SET_PROXY_ERROR,message:locales.config.SET_PROXY_ERROR_MSG}),this.props.setProxySetting({proxyType:"DIRECT"})}}onSettingsWindowClose(){this.props.closeIDESettings()}onWebDebuggerWindowClose(){this.props.setMainWindow(constants.MAIN_WINDOW_TYPE.ENTRANCE)}onDevWindowClose(){isMac?(this.props.closeProject(),global.Win.hide()):process.nextTick(()=>{topTools.quit()})}getOptionsComponent(){const a=this.props,b=[];if(a.confirmPopups)for(const c of a.confirmPopups)b.push(React.createElement(ConfirmPopup,Object.assign({},c,{key:c.id})));return b}render(){if(!this.props.rehydrated)return null;const a="en"===locales.getLocale()?"en_US":"";if(!global.isDevWindow){const b=constants.MAIN_WINDOW_TYPE,{mainWindow:c}=this.props;let d;return d=c===b.LOGIN?React.createElement(Login,null):c===b.ENTRANCE?React.createElement(Entrance,null):React.createElement(Entrance,null),React.createElement("div",{className:a},d,this.getOptionsComponent(),this.props.showSettings?React.createElement(Setting,null):null)}let b;return b="miniprogram"===global.devType?React.createElement(Main,null):React.createElement(WebDebugger,null),React.createElement("div",{className:a},b,this.getOptionsComponent(),this.props.showSettings?React.createElement(Setting,null):null)}};Root=tslib_1.__decorate([locales.mixin],Root),module.exports=connect(mapStateToProps,mapDispatchToProps)(Root);
;}(require("lazyload"), require);
